DeploymentSettingsScreen_1 As screen:
    OnVisible: |-
        =IfError(
            If(
                !IsBlank(Param("configsoln")) And !IsBlank(Param("env")) And !IsBlank(Param("profile")) And !IsBlank(Param("step")),
                ClearCollect(
                    AllEnvironments,
                    Sort(
                        PowerAppsforMakers.GetEnvironments().value,
                        DisplayName
                    )
                );
                Set(
                    SelectedEnvironment,
                    LookUp(
                        AllEnvironments,
                        name = Param("env")
                    )
                );
                Clear(TempSelectedEnvironmentSolutions);
                Collect(
                    TempSelectedEnvironmentSolutions,
                    AddColumns(
                        GetEnvironmentSolutions.Run(
                            SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                            Last(
                                FirstN(
                                    ClearCollect(
                                        splitCol,
                                        Split(
                                            SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                            "."
                                        )
                                    ),
                                    2
                                )
                            ).Result
                        ),
                        "deploymentrequests",
                        Sort(
                            Filter(
                                'Deployment Requests',
                                'Solution Name' = uniquename
                            ),
                            'Created On',
                            Descending
                        ),
                        "deploymentprofile",
                        First(
                            Sort(
                                Filter(
                                    'Deployment Requests',
                                    'Solution Name' = uniquename
                                ),
                                'Created On',
                                Descending
                            )
                        ).'Deployment Profile'
                    )
                );
                ClearCollect(
                    SelectedEnvironmentSolutions,
                    TempSelectedEnvironmentSolutions
                );
                Set(
                    SelectedSolutionToConfigure,
                    LookUp(
                        SelectedEnvironmentSolutions,
                        solutionid = Param("configsoln")
                    )
                );
                Set(
                    SelectedConfigurationDeploymentProfile,
                    LookUp(
                        'Deployment Profiles',
                        'Deployment Profile' = GUID(Param("profile"))
                    )
                );
                Set(
                    SelectedDeploymentStep,
                    LookUp(
                        'Deployment Steps',
                        'Deployment Step' = GUID(Param("step"))
                    )
                );
            );
            UpdateContext(
                {
                    sortFlowEnabled: true,
                    showDeployDialog: true,
                    showDeploymentSettingsLoader: true,
                    showConnectionReferenceSettings: false,
                    showEnvironmentVariablesSettings: false,
                    showSharingSettings: false,
                    showOwnerSettings: false,
                    showConnectorSettings: false,
                    showGroupTeamsSettings: false,
                    locCloseAfterSave: true,
                    locDeploymentEnvironmentLabel: "Select an Environment to Configure",
                    SolutionLoaderText: "Loading...",
                    DeploymentSettingsLoadingText: "GETTING SOLUTION DEPENDENCIES...",
                    SaveDeploymentButtonText: "SAVE AND CLOSE"
                }
            );
            ClearCollect(
                DeploymentSteps,
                Filter(
                    'Deployment Steps',
                    'Deployment Profile'.'Deployment Profile' = SelectedConfigurationDeploymentProfile.'Deployment Profile'
                )
            );
            ClearCollect(
                DeploymentEnvironments,
                AddColumns(
                    Sort(
                        DeploymentSteps,
                        'Step Number'
                    ),
                    "EnvironmentUrl",
                    'Deployment Environment'.URL,
                    "EnvironmentId",
                    LookUp(
                        AllEnvironments,
                        'Deployment Environment'.URL in properties.linkedEnvironmentMetadata.instanceUrl
                    ).name,
                    "EnvironmentUniqueName",
                    LookUp(
                        AllEnvironments,
                        'Deployment Environment'.URL in properties.linkedEnvironmentMetadata.instanceUrl
                    ).properties.linkedEnvironmentMetadata.uniqueName
                )
            );
            UpdateContext({locDeploymentEnvironmentCount: CountRows(DeploymentEnvironments)});
            RemoveIf(
                DeploymentEnvironments,
                IsBlankOrError(EnvironmentUniqueName)
            );
            If(
                locDeploymentEnvironmentCount <> CountRows(DeploymentEnvironments),
                UpdateContext({locDeploymentEnvironmentLabel: "Select an Environment to Configure (NOTE: One or more deployment environment(s) could not be found. Only the available deployment environment(s) will be configurable.)"})
            );
            If(
                CountRows(DeploymentEnvironments) > 0,
                If(
                    IsBlankOrError(SelectedDeploymentStep) Or IsBlankOrError(SelectedDeploymentStep.'Deployment Environment'),
                    UpdateContext({SelectedDeploymentEnvironment: First(DeploymentEnvironments)}),
                    UpdateContext(
                        {
                            SelectedDeploymentEnvironment: LookUp(
                                DeploymentEnvironments,
                                LookUp(
                                    'Deployment Environments',
                                    'Deployment Environment' = SelectedDeploymentStep.'Deployment Environment'.'Deployment Environment',
                                    URL
                                ) in EnvironmentUrl
                            )
                        }
                    )
                );
            //Load existing values from deployment configuration data
        UpdateContext({locSharepointFilter: ""});
                UpdateContext({locAADGroupFilters: ""});
                UpdateContext({locEnvironmentUserFilters: ""});
                If(
                    Not IsBlank(SelectedDeploymentEnvironment),
                    UpdateContext({locSolutionEnvironmentDeploySettingName: DeploymentSettingName & " - " & SelectedSolutionToConfigure.uniquename & " - " & SelectedDeploymentEnvironment.EnvironmentUrl});
                    UpdateContext(
                        {
                            locEnvironmentDeploymentSetting: LookUp(
                                'User Settings',
                                Name = locSolutionEnvironmentDeploySettingName
                            )
                        }
                    );
                    If(
                        IsBlank(locEnvironmentDeploymentSetting.Data),
                        UpdateContext({EnvironmentDeploymentSettings: []}),
                        UpdateContext({EnvironmentDeploymentSettings: ParseDeploymentSettings.Run(locEnvironmentDeploymentSetting.Data)})
                    );
                    UpdateContext(
                        {
                            locSharepointFilter: Concat(
                                Distinct(
                                    Filter(
                                        EnvironmentDeploymentSettings,
                                        StartsWith(
                                            Name,
                                            "environmentvariable."
                                        ) And ".sharepoint." in Value
                                    ),
                                    Value
                                ),
                                "site:" & Result,
                                " OR "
                            ),
                            locAADGroupFilters: Concat(
                                Distinct(
                                    Filter(
                                        EnvironmentDeploymentSettings,
                                        StartsWith(
                                            Name,
                                            "canvasshare.aadGroupId."
                                        ) And !IsBlankOrError(Value)
                                    ),
                                    Value
                                ),
                                "id eq '" & Result & "'",
                                " OR "
                            ),
                            locEnvironmentUserFilters: Concat(
                                Distinct(
                                    Filter(
                                        EnvironmentDeploymentSettings,
                                        (StartsWith(
                                            Name,
                                            "owner.ownerEmail."
                                        ) Or StartsWith(
                                            Name,
                                            "flow.activation."
                                        )) And !IsBlankOrError(Value)
                                    ),
                                    Value
                                ),
                                "internalemailaddress eq '" & Result & "'",
                                " or "
                            )
                        }
                    );
                );
                ClearCollect(
                    SolutionConnectionReferences,
                    {}
                );
                ClearCollect(
                    SolutionCanvasApps,
                    {}
                );
                ClearCollect(
                    SolutionSecurityRoles,
                    {}
                );
                ClearCollect(
                    SolutionEnvironmentVariables,
                    {}
                );
                ClearCollect(
                    SolutionFlows,
                    {}
                );
                ClearCollect(
                    AppSharingPermissions,
                    {}
                );
                ClearCollect(
                    SharepointLists,
                    {}
                );
                ClearCollect(
                    CustomConnectors,
                    {}
                );
                Clear(SolutionConnectionReferences);
                Clear(SolutionCanvasApps);
                Clear(SolutionSecurityRoles);
                Clear(SolutionEnvironmentVariables);
                Clear(SolutionFlows);
                Clear(AppSharingPermissions);
                Clear(SharepointLists);
                Clear(CustomConnectors);
                Concurrent(
                    ClearCollect(
                        AADGroups,
                        SearchAADGroups.Run(
                            {
                                text_1: locAADGroupFilters,
                                text: ""
                            }
                        ).value
                    ),
                    ClearCollect(
                        SharepointSites,
                        SearchSharepointSites.Run(
                            {
                                text: "",
                                text_1: locSharepointFilter
                            }
                        ).value
                    ),
                    ClearCollect(
                        EnvironmentTeams,
                        SearchDeploymentEnvironmentTeams.Run(
                            Last(
                                FirstN(
                                    ClearCollect(
                                        splitCol2,
                                        Split(
                                            SelectedDeploymentEnvironment.EnvironmentUrl,
                                            "."
                                        )
                                    ),
                                    2
                                )
                            ).Result,
                            LookUp(
                                AllEnvironments,
                                SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                            ).properties.linkedEnvironmentMetadata.uniqueName,
                            {
                                text_3: "",
                                text_4: ""
                            }
                        )
                    ),
                    ClearCollect(
                        EnvironmentBusinessUnits,
                        SearchDeploymentEnvironmentBUnits.Run(
                            Last(
                                FirstN(
                                    Split(
                                        SelectedDeploymentEnvironment.EnvironmentUrl,
                                        "."
                                    ),
                                    2
                                )
                            ).Result,
                            LookUp(
                                AllEnvironments,
                                SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                            ).properties.linkedEnvironmentMetadata.uniqueName
                        )
                    )//,
                    //ClearCollect(
                    //    EnvironmentUsers,
                    //    SearchDeploymentEnvironmentUsers.Run(
                    //        Last(
                    //            FirstN(
                    //                ClearCollect(
                    //                    splitCol3,
                    //                    Split(
                    //                        SelectedDeploymentEnvironment.EnvironmentUrl,
                    //                        "."
                    //                   )
                    //                ),
                    //                2
                    //            )
                    //        ).Result,
                    //        LookUp(
                    //            AllEnvironments,
                    //            SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                    //        ).properties.linkedEnvironmentMetadata.uniqueName,
                    //        {
                    //            text_3: "",
                    //            text_4: locEnvironmentUserFilters
                    //        }
                    //    )
                    //)
                );
                Collect(
                    AADGroups,
                    {
                        id: "",
                        displayName: ""
                    }
                );
                ClearCollect(
                    AADGroups,
                    Sort(
                        AADGroups,
                        displayName
                    )
                );
                ClearCollect(
                    TeamAADGroups,
                    AADGroups
                );
                Collect(
                    SharepointSites,
                    {webUrl: ""}
                );
                ClearCollect(
                    SharepointSites,
                    Sort(
                        SharepointSites,
                        webUrl
                    )
                );
            //Add an empty row to EnvironmentTeams
        Collect(
                    EnvironmentTeams,
                    {name: ""}
                );
                ClearCollect(
                    EnvironmentTeams,
                    Sort(
                        EnvironmentTeams,
                        name,
                        Ascending
                    )
                );
                //Collect(
                //    EnvironmentUsers,
                //    {internalemailaddress: ""}
                //);
                //ClearCollect(
                //    EnvironmentUsers,
                //    Sort(
                //        EnvironmentUsers,
                //        internalemailaddress,
                //        Ascending
                //    )
                //);
                If(
                    CountRows(DeploymentEnvironments) > 0,
                    Concurrent(
                        Collect(
                            SolutionConnectionReferences,
                            AddColumns(
                                GetSolutionConnectionReferences.Run(
                                    Last(
                                        FirstN(
                                            ClearCollect(
                                                splitCol1,
                                                Split(
                                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                    "."
                                                )
                                            ),
                                            2
                                        )
                                    ).Result,
                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                    SelectedSolutionToConfigure.solutionid
                                ),
                                "CurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "connectionreference." & connectionreferencelogicalname
                                ).Value
                            )
                        ),
                        Collect(
                            SolutionEnvironmentVariables,
                            AddColumns(
                                GetSolutionEnvironmentVariableDefinitions.Run(
                                    Last(
                                        FirstN(
                                            ClearCollect(
                                                splitCol2,
                                                Split(
                                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                    "."
                                                )
                                            ),
                                            2
                                        )
                                    ).Result,
                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                    SelectedSolutionToConfigure.solutionid
                                ),
                                "SharepointSites",
                                SharepointSites,
                                "FilterText",
                                "",
                                "FilterIcon",
                                Icon.FilterFlat,
                                "FilterVisible",
                                false,
                                "CurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "environmentvariable." & schemaname
                                ).Value
                            )
                        ),
                        Collect(
                            AppSharingPermissions,
                            {
                                Text: "Can View",
                                Value: "CanView"
                            },
                            {
                                Text: "Can Edit",
                                Value: "CanEdit"
                            },
                            {
                                Text: "Can View and Share",
                                Value: "CanViewWithShare"
                            }
                        ),
                        Collect(
                            SolutionCanvasApps,
                            AddColumns(
                                GetSolutionCanvasApps.Run(
                                    Last(
                                        FirstN(
                                            ClearCollect(
                                                splitCol3,
                                                Split(
                                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                    "."
                                                )
                                            ),
                                            2
                                        )
                                    ).Result,
                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                    SelectedSolutionToConfigure.solutionid
                                ),
                                "AADGroups",
                                AADGroups,
                                "FilterText",
                                "",
                                "FilterIcon",
                                Icon.FilterFlat,
                                "FilterVisible",
                                false,
                                "CurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "canvasshare.aadGroupId." & name
                                ).Value,
                                "CurrentPermission",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "canvasshare.roleName." & name
                                ).Value
                            )
                        ),
                        Collect(
                            SolutionFlows,
                            AddColumns(
                            //Filter to Modern Flows only for Now category = 5
                                Filter(
                                    GetSolutionFlows.Run(
                                        Last(
                                            FirstN(
                                                ClearCollect(
                                                    splitCol4,
                                                    Split(
                                                        SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                        "."
                                                    )
                                                ),
                                                2
                                            )
                                        ).Result,
                                        SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                        SelectedSolutionToConfigure.solutionid
                                    ),
                                    category = 5
                                ),
                                //"EnvironmentUsers",
                                //EnvironmentUsers,
                                "FilterText",
                                "",
                                "FilterIcon",
                                Icon.FilterFlat,
                                "FilterVisible",
                                false,
                                //"ActivationEnvironmentUsers",
                                //EnvironmentUsers,
                                "ActivationFilterText",
                                "",
                                "ActivationFilterIcon",
                                Icon.FilterFlat,
                                "ActivationFilterVisible",
                                false,
                                "ActivationCurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.activateas." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                "SharingCurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "flow.sharing." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                "CurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "owner.ownerEmail." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                "SortOrder",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.order." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                "Activate",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.activate." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value
                            )
                        ),
                        Collect(
                            CustomConnectors,
                            AddColumns(
                                GetSolutionCustomConnectors.Run(
                                    Last(
                                        FirstN(
                                            ClearCollect(
                                                splitCol5,
                                                Split(
                                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                    "."
                                                )
                                            ),
                                            2
                                        )
                                    ).Result,
                                    SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                    SelectedSolutionToConfigure.solutionid
                                ),
                                "CurrentValue",
                                LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "connector.teamname." & Substitute(
                                        displayname,
                                        " ",
                                        ""
                                    ) & "." & connectorid
                                ).Value
                            )
                        ),
                        Collect(
                            SolutionSecurityRoles,
                            GetSolutionSecurityRoles.Run(
                                Last(
                                    FirstN(
                                        ClearCollect(
                                            splitCol6,
                                            Split(
                                                SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                "."
                                            )
                                        ),
                                        2
                                    )
                                ).Result,
                                SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName
                            )
                        )
                    );
                );
                UpdateContext({showConnectionReferenceSettings: true});
                Select(fncLoadEnvironmentDeploymentSettings_1);
            ),
            UpdateContext({errorMessage: FirstError.Message});
            Notify("Error getting solution dependencies: " & errorMessage);
            
        )

    DeploymentSettingsDialog_1 As groupContainer:
        BorderColor: =BorderColorValue
        BorderThickness: =BorderThicknessValue
        Fill: =BorderColorValue
        Height: =1080
        Visible: =showDeployDialog
        Width: =1920
        ZIndex: =1

        rctDeployDialog_1 As rectangle:
            AccessibleLabel: ="Deployment Settings"
            BorderColor: =ColorFade(rctDeployDialog_1.Fill, -20%)
            DisabledFill: =rctDeployDialog_1.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(rctDeployDialog_1.Fill, 20%)
            PressedFill: =ColorFade(rctDeployDialog_1.Fill, -20%)
            Width: =1920
            ZIndex: =1

        lblDeployFlowOwner_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Solution Name"
            Tooltip: ="Updates the owner of the flow in the target environment."
            Visible: =showOwnerSettings && !IsEmpty(glrFlows_1.AllItems)
            Width: =182
            X: =91
            Y: =253
            ZIndex: =2

        lblDeployCustomConnectors_1 As label:
            FontWeight: =If(showConnectorSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Custom Connectors"
            Width: =182
            X: =754
            Y: =208
            ZIndex: =4

        icoDeployCustomConnectors_1 As icon.Add:
            AccessibleLabel: ="Ownership"
            BorderColor: =ColorFade(icoDeployCustomConnectors_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployCustomConnectors_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeployCustomConnectors_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployCustomConnectors_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployCustomConnectors_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: false,
                        showEnvironmentVariablesSettings: false,
                        showOwnerSettings: false,
                        showSharingSettings: false,
                        showConnectorSettings: true,
                        showGroupTeamsSettings: false
                
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeployCustomConnectors_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployCustomConnectors_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployCustomConnectors_1.Fill, -20%)
            Tooltip: ="Set Sharing Configuration for the Target Environment"
            Width: =182
            X: =754
            Y: =204
            ZIndex: =5

        lblDeployGroupTeams_1 As label:
            FontWeight: =If(showGroupTeamsSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Group Teams"
            Width: =125
            X: =565
            Y: =208
            ZIndex: =6

        icoDeployGroupTeams_1 As icon.Add:
            AccessibleLabel: ="Ownership"
            BorderColor: =ColorFade(icoDeployGroupTeams_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployGroupTeams_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeployGroupTeams_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployGroupTeams_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployGroupTeams_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: false,
                        showEnvironmentVariablesSettings: false,
                        showOwnerSettings: false,
                        showSharingSettings: false,
                        showConnectorSettings: false,
                        showGroupTeamsSettings: true
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeployGroupTeams_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployGroupTeams_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployGroupTeams_1.Fill, -20%)
            Tooltip: ="Set Group Teams and Roles for the Target Environment"
            Width: =125
            X: =565
            Y: =204
            ZIndex: =7

        lblDeployAppSharing_1 As label:
            FontWeight: =If(showSharingSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Canvas Apps"
            Width: =120
            X: =443
            Y: =208
            ZIndex: =8

        lblDeployFlowOwnership_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Flows"
            Width: =60
            X: =693
            Y: =208
            ZIndex: =9

        icoDeployOwnership_1 As icon.Add:
            AccessibleLabel: ="Ownership"
            BorderColor: =ColorFade(icoDeployOwnership_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployOwnership_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeployOwnership_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployOwnership_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployOwnership_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: false,
                        showEnvironmentVariablesSettings: false,
                        showOwnerSettings: true,
                        showSharingSettings: false,
                        showConnectorSettings: false,
                        showGroupTeamsSettings: false
                    }
                );
                ClearCollect(
                    solutionDepends,
                    [
                        {
                            SolutionName: "Solution 1",
                            Source: "My Solution Source 1"
                        },
                        {
                            SolutionName: "Solution 2",
                            Source: "My Solution Source 2"
                        },
                        {
                            SolutionName: "Solution 3",
                            Source: "My Solution Source 3"
                        }
                    ]
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeployOwnership_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployOwnership_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployOwnership_1.Fill, -20%)
            Tooltip: ="Set Sharing Configuration for the Target Environment"
            Width: =60
            X: =693
            Y: =204
            ZIndex: =10

        lblDeployEnvironmentVariables_1 As label:
            FontWeight: =If(showEnvironmentVariablesSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Environment Variables"
            Width: =210
            X: =238
            Y: =208
            ZIndex: =11

        lblDeployDialogTitle_1 As label:
            Align: =Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =PrimaryColor2Value
            FontWeight: =Semibold
            Height: =64
            Size: =16
            Text: ="CONFIGURE DEPLOYMENT SETTINGS (" & SelectedSolutionToConfigure.friendlyname & ")"
            Width: =1920
            ZIndex: =12

        icoDeployDialogClose_1 As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoDeployDialogClose_1.Fill, -20%)
            Color: =RGBA(255, 255, 255, 1)
            DisabledFill: =ColorFade(icoDeployDialogClose_1.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoDeployDialogClose_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployDialogClose_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployDialogClose_1.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =Navigate(
                    ReturnScreen,
                    Fade
                )
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoDeployDialogClose_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployDialogClose_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployDialogClose_1.Fill, -20%)
            Visible: =!IsBlankOrError(ReturnScreen)
            Width: =55
            X: =1851
            Y: =4
            ZIndex: =13

        lblDeployEnvironment_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =53
            PaddingLeft: =0
            PaddingTop: =0
            Text: =locDeploymentEnvironmentLabel
            Width: =1823
            X: =28
            Y: =84
            ZIndex: =14

        drpDeployEnvironments_1 As dropdown:
            AccessibleLabel: ="Deployment Environments"
            ChevronHoverBackground: =ColorFade(drpDeployEnvironments_1.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpDeployEnvironments_1.ChevronFill, 20%)
            Default: |
                =SelectedDeploymentEnvironment.Name
            Height: =46
            HoverBorderColor: =ColorFade(drpDeployEnvironments_1.BorderColor, 20%)
            HoverColor: =ColorFade(drpDeployEnvironments_1.Color, 20%)
            HoverFill: =ColorFade(drpDeployEnvironments_1.SelectionFill, 20%)
            Items: =Sort(DeploymentEnvironments, 'Step Number')
            OnChange: |-
                =UpdateContext({locCloseAfterSave: false});
                Select(btnSaveDeployment_1);
            OnSelect: =
            PressedBorderColor: =drpDeployEnvironments_1.HoverBorderColor
            PressedColor: =drpDeployEnvironments_1.Fill
            PressedFill: =drpDeployEnvironments_1.Color
            Tooltip: ="Select an Environment to Configure Deployment Settings"
            Visible: =!showNewDeployEnvironment
            Width: =1630
            X: =28
            Y: =137
            ZIndex: =15

        icoAddDeploymentEnvironment_1 As icon.Add:
            AccessibleLabel: ="Create Environment"
            BorderColor: =ColorFade(icoAddDeploymentEnvironment_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoAddDeploymentEnvironment_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =47
            HoverBorderColor: =ColorFade(icoAddDeploymentEnvironment_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoAddDeploymentEnvironment_1.Color, 20%)
            HoverFill: =ColorFade(icoAddDeploymentEnvironment_1.Fill, 20%)
            Icon: =Icon.Add
            OnSelect: |-
                =UpdateContext({showNewDeployEnvironment: true})
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoAddDeploymentEnvironment_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoAddDeploymentEnvironment_1.Color, -20%)
            PressedFill: =ColorFade(icoAddDeploymentEnvironment_1.Fill, -20%)
            Tooltip: ="Cancel Adding New Deployment Environment"
            Visible: =false
            Width: =57
            X: =1168
            Y: =138
            ZIndex: =16

        txtNewDeployEnvironment_1 As text:
            AccessibleLabel: ="Create Environment"
            Default: =""
            Height: =45
            HintText: ="Enter a Name for the Environment"
            HoverBorderColor: =ColorFade(txtNewDeployEnvironment_1.BorderColor, 20%)
            HoverColor: =ColorFade(txtNewDeployEnvironment_1.Color, 20%)
            HoverFill: =ColorFade(txtNewDeployEnvironment_1.Fill, 20%)
            PressedBorderColor: =txtNewDeployEnvironment_1.HoverBorderColor
            PressedColor: =txtNewDeployEnvironment_1.Color
            PressedFill: =txtNewDeployEnvironment_1.Fill
            Tooltip: ="Enter a Name for the Environment"
            Visible: =showNewDeployEnvironment
            Width: =1140
            X: =28
            Y: =138
            ZIndex: =17

        icoDeployNewEnvironmentClose_1 As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoDeployNewEnvironmentClose_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployNewEnvironmentClose_1.Fill, -80%)
            Height: =47
            HoverBorderColor: =ColorFade(icoDeployNewEnvironmentClose_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoAddDeploymentEnvironment_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployNewEnvironmentClose_1.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showNewDeployEnvironment: false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoDeployNewEnvironmentClose_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployNewEnvironmentClose_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployNewEnvironmentClose_1.Fill, -20%)
            Visible: =showNewDeployEnvironment
            Width: =57
            X: =1168
            Y: =137
            ZIndex: =18

        "glrCustomConnectors_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Flows"
            Height: =690
            Items: =CustomConnectors
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =68
            Visible: =showConnectorSettings
            Width: =1850
            X: =24
            Y: =278
            ZIndex: =19

            icoFlow_2 As image:
                AccessibleLabel: ="Flow"
                BorderColor: =ColorFade(icoFlow_2.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoFlow_2.BorderColor, 20%)
                HoverFill: =ColorFade(icoFlow_2.Fill, 20%)
                Image: |-
                    ="data:image/jpeg;base64," & ThisItem.iconblob
                OnSelect: =Select(Parent);
                PressedBorderColor: =ColorFade(icoFlow_2.BorderColor, -20%)
                PressedFill: =ColorFade(icoFlow_2.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            lblConnectorName_1 As label:
                Height: =24
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.displayname
                VerticalAlign: =VerticalAlign.Top
                Width: =600
                X: =58
                Y: =10
                ZIndex: =2

            lblConnectorId_1 As label:
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.name
                VerticalAlign: =VerticalAlign.Top
                Width: =900
                X: =58
                Y: =35
                ZIndex: =3

            Separator3_8 As rectangle:
                BorderColor: =ColorFade(Separator3_8.Fill, -20%)
                DisabledFill: =Separator3_8.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_8.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_8.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =5

            icoOpenConnector_1 As icon.Add:
                AccessibleLabel: ="Open Flow"
                BorderColor: =ColorFade(icoOpenConnector_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoOpenConnector_1.Fill, -80%)
                FocusedBorderThickness: =
                Height: =45
                HoverBorderColor: =ColorFade(icoOpenConnector_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoOpenConnector_1.Color, 20%)
                HoverFill: =ColorFade(icoOpenConnector_1.Fill, 20%)
                Icon: =
                OnSelect: |-
                    =Select(Parent);
                    Launch("https://us.flow.microsoft.com/manage/environments/" & SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName & "/solutions/" & glrSolutions.Selected.solutionid & "/flows/" & ThisItem.connectorid,
                        "",
                        "_blank"
                    )
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoOpenConnector_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoOpenConnector_1.Color, -20%)
                PressedFill: =ColorFade(icoOpenConnector_1.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =600
                Y: =10
                ZIndex: =9

            drpConnectorShareGroupTeams_1 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpConnectorShareGroupTeams_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpConnectorShareGroupTeams_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentValue), First(EnvironmentTeams).name, ThisItem.CurrentValue)
                Height: =46
                HoverBorderColor: =ColorFade(drpConnectorShareGroupTeams_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpConnectorShareGroupTeams_1.Color, 20%)
                HoverFill: =ColorFade(drpConnectorShareGroupTeams_1.SelectionFill, 20%)
                Items: =EnvironmentTeams
                PressedBorderColor: =drpConnectorShareGroupTeams_1.HoverBorderColor
                PressedColor: =drpConnectorShareGroupTeams_1.Fill
                PressedFill: =drpConnectorShareGroupTeams_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =850
                X: =979
                Y: =11
                ZIndex: =13

        "glrFlows_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Flows"
            DisplayMode: =If(sortFlowEnabled, DisplayMode.Edit, DisplayMode.Disabled)
            Height: =690
            Items: =solutionDepends
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =71
            Visible: =showOwnerSettings
            Width: =1850
            X: =24
            Y: =278
            ZIndex: =20

            icoFlow_3 As image:
                AccessibleLabel: ="Flow"
                BorderColor: =ColorFade(icoFlow_3.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoFlow_3.BorderColor, 20%)
                HoverFill: =ColorFade(icoFlow_3.Fill, 20%)
                Image: ='6206735cd7b91b0004122624'
                OnSelect: =Select(Parent);
                PressedBorderColor: =ColorFade(icoFlow_3.BorderColor, -20%)
                PressedFill: =ColorFade(icoFlow_3.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Separator3_9 As rectangle:
                BorderColor: =ColorFade(Separator3_9.Fill, -20%)
                DisabledFill: =Separator3_9.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_9.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_9.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            drpFlowShareGroupTeams_1 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpFlowShareGroupTeams_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpFlowShareGroupTeams_1.ChevronFill, 20%)
                Default: =
                Height: =47
                HoverBorderColor: =ColorFade(drpFlowShareGroupTeams_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpFlowShareGroupTeams_1.Color, 20%)
                HoverFill: =ColorFade(drpFlowShareGroupTeams_1.SelectionFill, 20%)
                Items: =ThisItem.Value
                PressedBorderColor: =drpFlowShareGroupTeams_1.HoverBorderColor
                PressedColor: =drpFlowShareGroupTeams_1.Fill
                PressedFill: =drpFlowShareGroupTeams_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =1243
                X: =70
                Y: =11
                ZIndex: =9

            icoSortFlowsUp_1 As icon.FilterFlat:
                BorderColor: =ColorFade(icoSortFlowsUp_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoSortFlowsUp_1.Fill, -80%)
                DisplayMode: =
                Height: =35
                HoverBorderColor: =ColorFade(icoSortFlowsUp_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoSortFlowsUp_1.Color, 20%)
                HoverFill: =ColorFade(icoSortFlowsUp_1.Fill, 20%)
                Icon: =Icon.ArrowUp
                OnSelect: =
                PressedBorderColor: =ColorFade(icoSortFlowsUp_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoSortFlowsUp_1.Color, -20%)
                PressedFill: =ColorFade(icoSortFlowsUp_1.Fill, -20%)
                Tooltip: =
                Width: =35
                X: =1758
                Y: =15
                ZIndex: =10

            icoSortFlowsDown_1 As icon.FilterFlat:
                BorderColor: =ColorFade(icoSortFlowsDown_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoSortFlowsDown_1.Fill, -80%)
                DisplayMode: =
                Height: =35
                HoverBorderColor: =ColorFade(icoSortFlowsDown_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoSortFlowsDown_1.Color, 20%)
                HoverFill: =ColorFade(icoSortFlowsDown_1.Fill, 20%)
                OnSelect: =
                PressedBorderColor: =ColorFade(icoSortFlowsDown_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoSortFlowsDown_1.Color, -20%)
                PressedFill: =ColorFade(icoSortFlowsDown_1.Fill, -20%)
                Tooltip: =
                Width: =35
                X: =1791
                Y: =16
                ZIndex: =11

            drpFlowShareGroupTeams_2 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpFlowShareGroupTeams_2.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpFlowShareGroupTeams_2.ChevronFill, 20%)
                Default: =
                Height: =46
                HoverBorderColor: =ColorFade(drpFlowShareGroupTeams_2.BorderColor, 20%)
                HoverColor: =ColorFade(drpFlowShareGroupTeams_2.Color, 20%)
                HoverFill: =ColorFade(drpFlowShareGroupTeams_2.SelectionFill, 20%)
                Items: =ThisItem.Value
                PressedBorderColor: =drpFlowShareGroupTeams_2.HoverBorderColor
                PressedColor: =drpFlowShareGroupTeams_2.Fill
                PressedFill: =drpFlowShareGroupTeams_2.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =400
                X: =1329
                Y: =12
                ZIndex: =12

        "glrEnvironmentVariables_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Environment Variables"
            Height: =715
            Items: =SolutionEnvironmentVariables
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =68
            Visible: =showEnvironmentVariablesSettings
            Width: =1850
            X: =24
            Y: =253
            ZIndex: =21

            lblEnvironmentVariableLogicalName_1 As label:
                FocusedBorderThickness: =FocusedBorderThicknessValue
                Height: =24
                OnSelect: =ThisItem.schemaname
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.displayname
                Tooltip: =ThisItem.displayname
                VerticalAlign: =VerticalAlign.Top
                Width: =880
                X: =58
                Y: =10
                ZIndex: =2

            lblEnvironmentVariableType_1 As label:
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem._type_label
                VerticalAlign: =VerticalAlign.Top
                Width: =600
                X: =58
                Y: =35
                ZIndex: =3

            Separator3_6 As rectangle:
                BorderColor: =ColorFade(Separator3_6.Fill, -20%)
                DisabledFill: =Separator3_6.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_6.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_6.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =5

            icoEnvironmentVariable_1 As image:
                BorderColor: =ColorFade(icoEnvironmentVariable_1.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoEnvironmentVariable_1.BorderColor, 20%)
                HoverFill: =ColorFade(icoEnvironmentVariable_1.Fill, 20%)
                Image: =If(ThisItem.type = 100000004, sharepointicon, download)
                OnSelect: =Select(Parent)
                PressedBorderColor: =ColorFade(icoEnvironmentVariable_1.BorderColor, -20%)
                PressedFill: =ColorFade(icoEnvironmentVariable_1.Fill, -20%)
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =6

            txtEnvironmentVariableValue_1 As text:
                AccessibleLabel: ="Environment Variable Value"
                Default: =ThisItem.CurrentValue
                HoverBorderColor: =ColorFade(txtEnvironmentVariableValue_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtEnvironmentVariableValue_1.Color, 20%)
                HoverFill: =ColorFade(txtEnvironmentVariableValue_1.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedBorderColor: =txtEnvironmentVariableValue_1.HoverBorderColor
                PressedColor: =txtEnvironmentVariableValue_1.Color
                PressedFill: =txtEnvironmentVariableValue_1.Fill
                Reset: =resetEnvironment
                Tooltip: ="Enter a Value for this Environment Variable in the Target Environment"
                Visible: =ThisItem.type <> 100000004
                Width: =880
                X: =943
                Y: =14
                ZIndex: =8

            drpSharepointSites_1 As dropdown:
                AccessibleLabel: ="Sharepoint Sites"
                ChevronHoverBackground: =ColorFade(drpSharepointSites_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpSharepointSites_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentValue), First(SharepointSites).webUrl, ThisItem.CurrentValue)
                Height: =44
                HoverBorderColor: =ColorFade(drpSharepointSites_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpSharepointSites_1.Color, 20%)
                HoverFill: =ColorFade(drpSharepointSites_1.SelectionFill, 20%)
                Items: =ThisItem.SharepointSites
                OnChange: |-
                    =ClearCollect(
                        SharepointLists,
                        Filter(
                            SharepointLists,
                            DefinitionId <> ThisItem.environmentvariabledefinitionid
                        )
                    );
                    If(
                        Not IsBlank(drpSharepointSites_1.Selected.id),
                        Collect(
                            SharepointLists,
                            AddColumns(
                                SearchSharepointLists.Run(drpSharepointSites_1.Selected.id).value,
                                "DefinitionId",
                                ThisItem.environmentvariabledefinitionid
                            )
                        )
                    );
                    txtEnvironmentVariableValue_1.Text = drpSharepointSites_1.Selected.webUrl
                PressedBorderColor: =drpSharepointSites_1.HoverBorderColor
                PressedColor: =drpSharepointSites_1.Fill
                PressedFill: =drpSharepointSites_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select a Sharepoint Site"
                Visible: =ThisItem.type = 100000004 && ThisItem.parameterkey = "dataset" && ThisItem.apiid = "/providers/microsoft.powerapps/apis/shared_sharepointonline"
                Width: =840
                X: =943
                Y: =12
                ZIndex: =9

            drpSharepointLists_1 As dropdown:
                AccessibleLabel: ="Sharepoint Lists"
                ChevronHoverBackground: =ColorFade(drpSharepointLists_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpSharepointLists_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentValue), First(SharepointLists).name, LookUp(SharepointLists, id = ThisItem.CurrentValue).name)
                DisplayMode: |-
                    =If(
                        IsBlank(First(Filter(
                            SharepointLists,
                            DefinitionId = ThisItem._parentdefinitionid_value
                        )).id),
                        Disabled,
                        Edit
                    )
                Height: =45
                HoverBorderColor: =ColorFade(drpSharepointLists_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpSharepointLists_1.Color, 20%)
                HoverFill: =ColorFade(drpSharepointLists_1.SelectionFill, 20%)
                Items: =Sort(Filter(SharepointLists, DefinitionId = ThisItem._parentdefinitionid_value), name)
                OnChange: =txtEnvironmentVariableValue_1.Text = drpSharepointLists_1.Selected.id
                PressedBorderColor: =drpSharepointLists_1.HoverBorderColor
                PressedColor: =drpSharepointLists_1.Fill
                PressedFill: =drpSharepointLists_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select a Sharepoint List"
                Visible: =ThisItem.type = 100000004 && ThisItem.parameterkey = "table" && ThisItem.apiid = "/providers/microsoft.powerapps/apis/shared_sharepointonline"
                Width: =850
                X: =973
                Y: =12
                ZIndex: =10

            icoChildEnvironmentVariable1_1 As icon.Cancel:
                BorderColor: =ColorFade(icoChildEnvironmentVariable1_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoChildEnvironmentVariable1_1.Fill, -80%)
                Height: =42
                HoverBorderColor: =ColorFade(icoChildEnvironmentVariable1_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoChildEnvironmentVariable1_1.Color, 20%)
                HoverFill: =ColorFade(icoChildEnvironmentVariable1_1.Fill, 20%)
                Icon: =Icon.HorizontalLine
                OnSelect: =
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(icoChildEnvironmentVariable1_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoChildEnvironmentVariable1_1.Color, -20%)
                PressedFill: =ColorFade(icoChildEnvironmentVariable1_1.Fill, -20%)
                Visible: =ThisItem.type = 100000004 && ThisItem.parameterkey = "table"
                Width: =42
                X: =934
                Y: =15
                ZIndex: =11

            icoChildEnvironmentVariable2_1 As icon.Cancel:
                BorderColor: =ColorFade(icoChildEnvironmentVariable2_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoChildEnvironmentVariable2_1.Fill, -80%)
                Height: =42
                HoverBorderColor: =ColorFade(icoChildEnvironmentVariable2_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoChildEnvironmentVariable2_1.Color, 20%)
                HoverFill: =ColorFade(icoChildEnvironmentVariable2_1.Fill, 20%)
                Icon: =Icon.VerticalLine
                OnSelect: =
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(icoChildEnvironmentVariable2_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoChildEnvironmentVariable2_1.Color, -20%)
                PressedFill: =ColorFade(icoChildEnvironmentVariable2_1.Fill, -20%)
                Visible: =ThisItem.type = 100000004 && ThisItem.parameterkey = "table"
                Width: =42
                X: =923
                Y: =5
                ZIndex: =12

            icoFilterSites_1 As icon.FilterFlat:
                BorderColor: =ColorFade(icoFilterSites_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoFilterSites_1.Fill, -80%)
                Height: =35
                HoverBorderColor: =ColorFade(icoFilterSites_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoFilterSites_1.Color, 20%)
                HoverFill: =ColorFade(icoFilterSites_1.Fill, 20%)
                Icon: =ThisItem.FilterIcon
                OnSelect: |-
                    =UpdateContext({currentSharepointSite: glrEnvironmentVariables_1.Selected.drpSharepointSites_1.Selected});
                    If(
                        glrEnvironmentVariables_1.Selected.FilterVisible,
                        If(
                            !IsBlankOrError(glrEnvironmentVariables_1.Selected.txtSearchSites_1.Text),
                            ClearCollect(
                                SharepointSites,
                                SearchSharepointSites.Run(
                                    {
                                        text: "*" & glrEnvironmentVariables_1.Selected.txtSearchSites_1.Text & "*",
                                        text_1: ""
                                    }
                                ).value
                            ),
                            ClearCollect(
                                SharepointSites,
                                SearchSharepointSites.Run(
                                    {
                                        text: "",
                                        text_1: ""
                                    }
                                ).value
                            )
                        );
                        UpdateContext(
                            {
                                lclFirstSite: First(
                                    Sort(
                                        SharepointSites,
                                        webUrl
                                    )
                                )
                            }
                        );
                        Collect(
                            SharepointSites,
                            {webUrl: ""}
                        );
                        ClearCollect(
                            SharepointSites,
                            Sort(
                                SharepointSites,
                                webUrl
                            )
                        );
                        If(
                            IsBlankOrError(lclFirstSite),
                            Patch(
                                SolutionEnvironmentVariables,
                                glrEnvironmentVariables_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    SharepointSites: SharepointSites,
                                    FilterVisible: false,
                                    CurrentValue: currentSharepointSite.webUrl
                                }
                            ),
                            Patch(
                                SolutionEnvironmentVariables,
                                glrEnvironmentVariables_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    SharepointSites: SharepointSites,
                                    FilterVisible: false,
                                    CurrentValue: lclFirstSite.webUrl
                                }
                            );
                            UpdateContext({currentSharepointSite: lclFirstSite});
                            Reset(drpSharepointSites_1);
                        ),
                        Patch(
                            SolutionEnvironmentVariables,
                            glrEnvironmentVariables_1.Selected,
                            {
                                FilterIcon: Search,
                                FilterVisible: true,
                                CurrentValue: currentSharepointSite.webUrl
                            }
                        );
                        
                    );
                    ClearCollect(
                        SharepointLists,
                        Filter(
                            SharepointLists,
                            DefinitionId <> glrEnvironmentVariables_1.Selected.environmentvariabledefinitionid
                        )
                    );
                    If(
                        Not IsBlank(currentSharepointSite.id),
                        Collect(
                            SharepointLists,
                            AddColumns(
                                SearchSharepointLists.Run(currentSharepointSite.id).value,
                                "DefinitionId",
                                glrEnvironmentVariables_1.Selected.environmentvariabledefinitionid
                            )
                        )
                    );
                    glrEnvironmentVariables_1.Selected.txtEnvironmentVariableValue_1.Text = currentSharepointSite.webUrl
                PressedBorderColor: =ColorFade(icoFilterSites_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoFilterSites_1.Color, -20%)
                PressedFill: =ColorFade(icoFilterSites_1.Fill, -20%)
                Tooltip: ="Filter this list"
                Visible: =ThisItem.type = 100000004 && ThisItem.parameterkey = "dataset" && ThisItem.apiid = "/providers/microsoft.powerapps/apis/shared_sharepointonline"
                Width: =35
                X: =1790
                Y: =17
                ZIndex: =13

            txtSearchSites_1 As text:
                AccessibleLabel: ="Environment Variable Value"
                Default: =
                Height: =44
                HoverBorderColor: =ColorFade(txtSearchSites_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtSearchSites_1.Color, 20%)
                HoverFill: =ColorFade(txtSearchSites_1.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedBorderColor: =txtSearchSites_1.HoverBorderColor
                PressedColor: =txtSearchSites_1.Color
                PressedFill: =txtSearchSites_1.Fill
                Reset: =resetEnvironment
                Tooltip: ="Enter a Value for this Environment Variable in the Target Environment"
                Visible: =ThisItem.FilterVisible
                Width: =840
                X: =943
                Y: =12
                ZIndex: =14

        "glrConnectionReferences_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Connection References"
            Height: =715
            Items: =SolutionConnectionReferences
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =68
            Visible: =showConnectionReferenceSettings
            Width: =1850
            X: =24
            Y: =253
            ZIndex: =22

            icoConnectorIcon_1 As image:
                BorderColor: =ColorFade(icoConnectorIcon_1.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoConnectorIcon_1.BorderColor, 20%)
                HoverFill: =ColorFade(icoConnectorIcon_1.Fill, 20%)
                Image: =drpConnectionReferenceConnections_1.Selected.IconUrl
                OnSelect: =Select(Parent)
                PressedBorderColor: =ColorFade(icoConnectorIcon_1.BorderColor, -20%)
                PressedFill: =ColorFade(icoConnectorIcon_1.Fill, -20%)
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            lblConnectionReferenceName_1 As label:
                Height: =24
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.connectionreferencedisplayname
                VerticalAlign: =VerticalAlign.Top
                Width: =600
                X: =58
                Y: =10
                ZIndex: =2

            lblConnectionReferenceLogicalName_1 As label:
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.connectionreferencelogicalname
                VerticalAlign: =VerticalAlign.Top
                Width: =600
                X: =58
                Y: =35
                ZIndex: =3

            Separator3_7 As rectangle:
                BorderColor: =ColorFade(Separator3_7.Fill, -20%)
                DisabledFill: =Separator3_7.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_7.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_7.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =5

            drpConnectionReferenceConnections_1 As dropdown:
                AccessibleLabel: ="Connections"
                ChevronHoverBackground: =ColorFade(drpConnectionReferenceConnections_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpConnectionReferenceConnections_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentValue), First(Filter(EnvironmentConnections, ApiId = ThisItem.connectorid And Status = "Connected")).DisplayName, LookUp(EnvironmentConnections, ConnectionId = ThisItem.CurrentValue).DisplayName)
                Height: =51
                HoverBorderColor: =ColorFade(drpConnectionReferenceConnections_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpConnectionReferenceConnections_1.Color, 20%)
                HoverFill: =ColorFade(drpConnectionReferenceConnections_1.SelectionFill, 20%)
                Items: |-
                    =If(
                        IsBlankOrError(ThisItem.CustomConnectorId),
                        Sort(
                            Filter(
                                EnvironmentConnections,
                                ApiId = ThisItem.connectorid
                            ),
                            Status
                        ),
                        //Need to parse out the name of the connector from the expand query which returns a json string for some reason in the legacy connector.
                        //We should be able to clean this up when the new dataverse connector supports cross environment actions
                        Sort(
                            Filter(
                                EnvironmentConnections,
                                First(
                                    Filter(
                                        EnvironmentCustomConnectors,
                                        name = Trim(
                                            Substitute(
                                                Substitute(
                                                    Last(
                                                        Split(
                                                            First(
                                                                Split(
                                                                    ThisItem.CustomConnectorId,
                                                                    ","
                                                                )
                                                            ).Result,
                                                            ":"
                                                        )
                                                    ).Result,
                                                    """",
                                                    ""
                                                ),
                                                "\n",
                                                ""
                                            )
                                        )
                                    )
                                ).connectorinternalid in ApiId
                            ),
                            Status
                        )
                    )
                PressedBorderColor: =drpConnectionReferenceConnections_1.HoverBorderColor
                PressedColor: =drpConnectionReferenceConnections_1.Fill
                PressedFill: =drpConnectionReferenceConnections_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select and Existing Connection"
                Width: =860
                X: =846
                Y: =5
                ZIndex: =6

            lblConnectionStatus_1 As label:
                Align: =Align.Center
                Color: =If(lblConnectionStatus_1.Text = "Connected", Color.Green, If(lblConnectionStatus_1.Text = "Unknown", Color.DarkOrange, Color.Red))
                FontWeight: =FontWeight.Semibold
                Height: =43
                PaddingLeft: =0
                PaddingTop: =0
                Text: =If(IsBlank(drpConnectionReferenceConnections_1.Selected), "Not Connected", drpConnectionReferenceConnections_1.Selected.Status)
                Tooltip: =If(IsBlank(drpConnectionReferenceConnections_1.Selected), "Select + to Create a New Connection", drpConnectionReferenceConnections_1.Selected.Status)
                Width: =200
                X: =642
                Y: =12
                ZIndex: =7

            icoNewConnection_1 As icon.Add:
                AccessibleLabel: ="New Connection"
                BorderColor: =ColorFade(icoNewConnection_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoNewConnection_1.Fill, -80%)
                DisplayMode: |-
                    =If(
                        IsBlankOrError(drpDeployEnvironments_1.Selected.EnvironmentId) Or (!IsBlankOrError(ThisItem.CustomConnectorId) And IsBlankOrError(
                            First(
                                Filter(
                                    EnvironmentCustomConnectors,
                                    name = Trim(
                                        Substitute(
                                            Substitute(
                                                Last(
                                                    Split(
                                                        First(
                                                            Split(
                                                                ThisItem.CustomConnectorId,
                                                                ","
                                                            )
                                                        ).Result,
                                                        ":"
                                                    )
                                                ).Result,
                                                """",
                                                ""
                                            ),
                                            "\n",
                                            ""
                                        )
                                    )
                                )
                            )
                        )),
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderThickness: =
                Height: =47
                HoverBorderColor: =ColorFade(icoNewConnection_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoNewConnection_1.Color, 20%)
                HoverFill: =ColorFade(icoNewConnection_1.Fill, 20%)
                Icon: =Icon.Add
                OnSelect: |
                    =Select(Parent);
                    If(
                        IsBlankOrError(glrConnectionReferences_1.Selected.CustomConnectorId),
                        Launch(
                            "https://make.powerapps.com/environments/" & drpDeployEnvironments_1.Selected.EnvironmentId & "/connections/available?apiName=" & Last(
                                Split(
                                    glrConnectionReferences_1.Selected.connectorid,
                                    "/"
                                )
                            ).Result
                        ),
                        //Need to parse out the name of the connector from the expand query which returns a json string for some reason in the legacy connector.
                        UpdateContext(
                            {
                                locConnectorId: First(
                                    Filter(
                                        EnvironmentCustomConnectors,
                                        name = Trim(
                                            Substitute(
                                                Substitute(
                                                    Last(
                                                        Split(
                                                            First(
                                                                Split(
                                                                    glrConnectionReferences_1.Selected.CustomConnectorId,
                                                                    ","
                                                                )
                                                            ).Result,
                                                            ":"
                                                        )
                                                    ).Result,
                                                    """",
                                                    ""
                                                ),
                                                "\n",
                                                ""
                                            )
                                        )
                                    )
                                ).connectorinternalid
                            }
                        );
                        If(
                            !IsBlankOrError(locConnectorId),
                            Launch("https://make.powerapps.com/environments/" & drpDeployEnvironments_1.Selected.EnvironmentId & "/connections/available?apiName=" & locConnectorId)
                        )
                    );
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoNewConnection_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoNewConnection_1.Color, -20%)
                PressedFill: =ColorFade(icoNewConnection_1.Fill, -20%)
                Tooltip: =If(IsBlankOrError(drpDeployEnvironments_1.Selected.EnvironmentId), "You Don't Have Permissions to This Environment to Create Connections. Please Request a Connection from a User With Permissions To This Environment", "Create a New Connection")
                Width: =57
                X: =1712
                Y: =9
                ZIndex: =8

            icoConnectionStatus_1 As icon.Add:
                AccessibleLabel: ="Connection Status"
                BorderColor: =ColorFade(icoConnectionStatus_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoConnectionStatus_1.Fill, -80%)
                FocusedBorderThickness: =
                Height: =58
                HoverBorderColor: =ColorFade(icoConnectionStatus_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoConnectionStatus_1.Color, 20%)
                HoverFill: =ColorFade(icoConnectionStatus_1.Fill, 20%)
                Icon: =
                OnSelect: |-
                    =Select(Parent);
                        Set(
                            connectorName,
                            Last(
                                Split(
                                    glrConnectionReferences_1.Selected.connectorid,
                                    "/"
                                )
                            ).Result
                        );
                    If(
                        IsBlank(glrConnectionReferences_1.Selected.drpConnectionReferenceConnections_1.Selected),
                        Launch(
                        "https://make.powerapps.com/environments/" & drpDeployEnvironments_1.Selected.EnvironmentId & "/connections/available?apiName=" & connectorName,
                        "",
                        "_blank"
                    ),
                    
                        Launch(
                            "https://make.powerapps.com/environments/" & drpDeployEnvironments_1.Selected.EnvironmentId & "/connections/" & connectorName & "/" & glrConnectionReferences_1.Selected.drpConnectionReferenceConnections_1.Selected.ConnectionId &"/details?apiName=" & connectorName,
                            "",
                            "_blank"
                        )
                    )
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoConnectionStatus_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoConnectionStatus_1.Color, -20%)
                PressedFill: =ColorFade(icoConnectionStatus_1.Fill, -20%)
                Tooltip: ="Select to open the Connection"
                Width: =842
                Y: =5
                ZIndex: =9

            icoRequestConnection_1 As icon.Add:
                AccessibleLabel: ="Request Connection"
                BorderColor: =ColorFade(icoRequestConnection_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoRequestConnection_1.Fill, -80%)
                FocusedBorderThickness: =
                Height: =47
                HoverBorderColor: =ColorFade(icoRequestConnection_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoRequestConnection_1.Color, 20%)
                HoverFill: =ColorFade(icoRequestConnection_1.Fill, 20%)
                Icon: =Icon.AddUser
                OnSelect: |
                    =UpdateContext(
                        {
                            showDeploymentDialogOverlay: true,
                            showConnectionRequestDialog: true
                        }
                    );
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoRequestConnection_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoRequestConnection_1.Color, -20%)
                PressedFill: =ColorFade(icoRequestConnection_1.Fill, -20%)
                Tooltip: ="Request a New Connection from Another User"
                Width: =57
                X: =1766
                Y: =9
                ZIndex: =10

        "glrCanvasApps_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Canvas Apps"
            Height: =690
            Items: =SolutionCanvasApps
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =68
            Visible: =showSharingSettings
            Width: =1850
            X: =24
            Y: =278
            ZIndex: =23

            icoCanvasApp_1 As image:
                AccessibleLabel: ="Canvas App"
                BorderColor: =ColorFade(icoCanvasApp_1.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoCanvasApp_1.BorderColor, 20%)
                HoverFill: =ColorFade(icoCanvasApp_1.Fill, 20%)
                Image: =PowerApps_scalable
                OnSelect: =Select(Parent);
                PressedBorderColor: =ColorFade(icoCanvasApp_1.BorderColor, -20%)
                PressedFill: =ColorFade(icoCanvasApp_1.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            lblCanvasAppName_2 As label:
                Height: =24
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.displayname
                VerticalAlign: =VerticalAlign.Top
                Width: =644
                X: =58
                Y: =10
                ZIndex: =2

            lblCanvasAppLogicalName_2 As label:
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem._componentstate_label
                VerticalAlign: =VerticalAlign.Top
                Width: =600
                X: =58
                Y: =35
                ZIndex: =3

            Separator3_10 As rectangle:
                BorderColor: =ColorFade(Separator3_10.Fill, -20%)
                DisabledFill: =Separator3_10.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_10.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_10.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            drpCanvasAppSharePermission_1 As dropdown:
                AccessibleLabel: ="App Sharing Permission"
                ChevronHoverBackground: =ColorFade(drpCanvasAppSharePermission_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpCanvasAppSharePermission_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentPermission), First(AppSharingPermissions).Text, LookUp(AppSharingPermissions, Value = ThisItem.CurrentPermission).Text)
                Height: =45
                HoverBorderColor: =ColorFade(drpCanvasAppSharePermission_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpCanvasAppSharePermission_1.Color, 20%)
                HoverFill: =ColorFade(drpCanvasAppSharePermission_1.SelectionFill, 20%)
                Items: =AppSharingPermissions
                PressedBorderColor: =drpCanvasAppSharePermission_1.HoverBorderColor
                PressedColor: =drpCanvasAppSharePermission_1.Fill
                PressedFill: =drpCanvasAppSharePermission_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select a Permission for the Group"
                Width: =220
                X: =1603
                Y: =12
                ZIndex: =5

            icoLaunchApp_1 As icon.Add:
                AccessibleLabel: ="Open App"
                BorderColor: =ColorFade(icoLaunchApp_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoLaunchApp_1.Fill, -80%)
                FocusedBorderThickness: =
                Height: =46
                HoverBorderColor: =ColorFade(icoLaunchApp_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoLaunchApp_1.Color, 20%)
                HoverFill: =ColorFade(icoLaunchApp_1.Fill, 20%)
                Icon: =
                OnSelect: |-
                    =Select(Parent);
                    Launch(ThisItem.appopenuri,
                        "",
                        "_blank"
                    )
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoLaunchApp_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoLaunchApp_1.Color, -20%)
                PressedFill: =ColorFade(icoLaunchApp_1.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =691
                Y: =10
                ZIndex: =6

            drpCanvasAppShareGroups_1 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpCanvasAppShareGroups_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpCanvasAppShareGroups_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.CurrentValue), First(ThisItem.AADGroups).displayName, LookUp(ThisItem.AADGroups, Text(id) = ThisItem.CurrentValue).displayName)
                Height: =46
                HoverBorderColor: =ColorFade(drpCanvasAppShareGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpCanvasAppShareGroups_1.Color, 20%)
                HoverFill: =ColorFade(drpCanvasAppShareGroups_1.SelectionFill, 20%)
                Items: =ThisItem.AADGroups
                PressedBorderColor: =drpCanvasAppShareGroups_1.HoverBorderColor
                PressedColor: =drpCanvasAppShareGroups_1.Fill
                PressedFill: =drpCanvasAppShareGroups_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =800
                X: =707
                Y: =12
                ZIndex: =7

            icoViewGroupMembers_1 As icon.Add:
                AccessibleLabel: ="Open Group Members"
                BorderColor: =ColorFade(icoViewGroupMembers_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoViewGroupMembers_1.Fill, -80%)
                FocusedBorderThickness: =
                Height: =47
                HoverBorderColor: =ColorFade(icoViewGroupMembers_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoViewGroupMembers_1.Color, 20%)
                HoverFill: =ColorFade(icoViewGroupMembers_1.Fill, 20%)
                Icon: =Icon.DetailList
                OnSelect: |-
                    =Select(Parent);
                    Launch("https://portal.azure.com/#blade/Microsoft_AAD_IAM/GroupDetailsMenuBlade/Members/groupId/" & drpCanvasAppShareGroups_1.Selected.id)
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoViewGroupMembers_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoViewGroupMembers_1.Color, -20%)
                PressedFill: =ColorFade(icoViewGroupMembers_1.Fill, -20%)
                Tooltip: ="View Azure AD Group Details"
                Width: =57
                X: =1546
                Y: =12
                ZIndex: =8

            txtFilterGroups_1 As text:
                Default: =""
                Height: =46
                HintText: ="Enter the name of the group to filter the drop down"
                HoverBorderColor: =ColorFade(txtFilterGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtFilterGroups_1.Color, 20%)
                HoverFill: =ColorFade(txtFilterGroups_1.Fill, 20%)
                PressedBorderColor: =txtFilterGroups_1.HoverBorderColor
                PressedColor: =txtFilterGroups_1.Color
                PressedFill: =txtFilterGroups_1.Fill
                Visible: =ThisItem.FilterVisible
                Width: =800
                X: =707
                Y: =12
                ZIndex: =9

            icoFilterGroups_1 As icon.FilterFlat:
                BorderColor: =ColorFade(icoFilterGroups_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoFilterGroups_1.Fill, -80%)
                Height: =35
                HoverBorderColor: =ColorFade(icoFilterGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoFilterGroups_1.Color, 20%)
                HoverFill: =ColorFade(icoFilterGroups_1.Fill, 20%)
                Icon: =ThisItem.FilterIcon
                OnSelect: |
                    =UpdateContext(
                        {
                            currentGroup: glrCanvasApps_1.Selected.drpCanvasAppShareGroups_1.Selected,
                            currentPermission: glrCanvasApps_1.Selected.drpCanvasAppSharePermission_1.Selected
                        }
                    );
                    If(
                        glrCanvasApps_1.Selected.FilterVisible,
                        ClearCollect(
                            AADGroups,
                            SearchAADGroups.Run(
                                {
                                    text: glrCanvasApps_1.Selected.txtFilterGroups_1.Text,
                                    text_1: ""
                                }
                            ).value
                        );
                        UpdateContext(
                            {
                                lclFirstAADGroup: First(
                                    Sort(
                                        AADGroups,
                                        displayName
                                    )
                                )
                            }
                        );
                        Collect(
                            AADGroups,
                            {
                                id: "",
                                displayName: ""
                            }
                        );
                        ClearCollect(
                            AADGroups,
                            Sort(
                                AADGroups,
                                displayName
                            )
                        );
                        If(
                            IsBlankOrError(lclFirstAADGroup),
                            Patch(
                                SolutionCanvasApps,
                                glrCanvasApps_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    AADGroups: AADGroups,
                                    FilterVisible: false,
                                    CurrentValue: currentGroup.id,
                                    CurrentPermission: currentPermission.Value
                                }
                            ),
                            Patch(
                                SolutionCanvasApps,
                                glrCanvasApps_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    AADGroups: AADGroups,
                                    FilterVisible: false,
                                    CurrentValue: lclFirstAADGroup.id,
                                    CurrentPermission: currentPermission.Value
                                }
                            );
                            Reset(drpCanvasAppShareGroups_1);
                        ),
                        Patch(
                            SolutionCanvasApps,
                            glrCanvasApps_1.Selected,
                            {
                                FilterIcon: Search,
                                FilterVisible: true,
                                CurrentValue: currentGroup.id,
                                CurrentPermission: currentPermission.Value
                            }
                        );
                        
                    );
                PressedBorderColor: =ColorFade(icoFilterGroups_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoFilterGroups_1.Color, -20%)
                PressedFill: =ColorFade(icoFilterGroups_1.Fill, -20%)
                Tooltip: ="Filter this list"
                Visible: =showSharingSettings
                Width: =35
                X: =1515
                Y: =18
                ZIndex: =10

        "glrGroupTeams_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Canvas Apps"
            Height: =690
            Items: =GroupTeams
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =68
            Visible: =showGroupTeamsSettings
            Width: =1850
            X: =24
            Y: =278
            ZIndex: =24

            icoGroupTeam_1 As image:
                AccessibleLabel: ="Canvas App"
                BorderColor: =ColorFade(icoGroupTeam_1.Fill, -20%)
                Height: =58
                HoverBorderColor: =ColorFade(icoGroupTeam_1.BorderColor, 20%)
                HoverFill: =ColorFade(icoGroupTeam_1.Fill, 20%)
                Image: =AADIcon
                OnSelect: =Select(Parent);
                PressedBorderColor: =ColorFade(icoGroupTeam_1.BorderColor, -20%)
                PressedFill: =ColorFade(icoGroupTeam_1.Fill, -20%)
                Tooltip: ="Select to Open App"
                Width: =58
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            lblCanvasAppName_3 As label:
                Height: =24
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.DisplayName
                VerticalAlign: =VerticalAlign.Top
                Width: =460
                X: =58
                Y: =10
                ZIndex: =2

            lblCanvasAppLogicalName_3 As label:
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =If(IsBlank(ThisItem.Value), First(ThisItem.AADGroups).displayName, LookUp(ThisItem.AADGroups, Text(id) = ThisItem.Value).displayName)
                VerticalAlign: =VerticalAlign.Top
                Width: =460
                X: =58
                Y: =35
                ZIndex: =3

            Separator3_11 As rectangle:
                BorderColor: =ColorFade(Separator3_11.Fill, -20%)
                DisabledFill: =Separator3_11.Fill
                Height: =1
                HoverFill: =ColorFade(Separator3_11.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator3_11.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =4

            txtGroupTeamName_1 As text:
                AccessibleLabel: ="Environment Variable Value"
                Default: =ThisItem.DisplayName
                Height: =46
                HoverBorderColor: =ColorFade(txtGroupTeamName_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtGroupTeamName_1.Color, 20%)
                HoverFill: =ColorFade(txtGroupTeamName_1.Fill, 20%)
                OnChange: |-
                    =Patch(
                        GroupTeams,
                        ThisItem,
                        {DisplayName: txtGroupTeamName_1.Text}
                    );
                    Patch(
                        EnvironmentTeams,
                        LookUp(EnvironmentTeams, teamid = ThisItem.Id),
                        {name: txtGroupTeamName_1.Text}
                    );
                    ClearCollect(EnvironmentTeams, Sort(EnvironmentTeams, name));
                OnSelect: =Select(Parent)
                PressedBorderColor: =txtGroupTeamName_1.HoverBorderColor
                PressedColor: =txtGroupTeamName_1.Color
                PressedFill: =txtGroupTeamName_1.Fill
                Reset: =resetEnvironment
                Tooltip: ="Enter a Value for this Environment Variable in the Target Environment"
                Width: =300
                X: =462
                Y: =10
                ZIndex: =5

            cmbGroupTeamRoles_1 As combobox:
                ChevronHoverBackground: =ColorFade(cmbGroupTeamRoles_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(cmbGroupTeamRoles_1.ChevronFill, 20%)
                DefaultSelectedItems: |-
                    =Distinct(
                        Filter(
                            GroupTeamSelectedRoles,
                            GroupTeamId = ThisItem.Id
                        ),
                        name
                    )
                DisplayFields: =["Result"]
                Height: =46
                HoverBorderColor: =ColorFade(cmbGroupTeamRoles_1.BorderColor, 20%)
                HoverColor: =ColorFade(cmbGroupTeamRoles_1.Color, 20%)
                HoverFill: =ColorFade(cmbGroupTeamRoles_1.SelectionFill, 20%)
                InputTextPlaceholder: ="Find Roles"
                IsSearchable: =false
                Items: =Distinct(SolutionSecurityRoles, name).Result
                MoreItemsButtonColor: =Self.ChevronBackground
                OnChange: =ThisItem.DisplayMode
                OnSelect: =Select(Parent)
                PressedBorderColor: =cmbGroupTeamRoles_1.HoverBorderColor
                SearchFields: =["Result"]
                SearchItems: =[]
                Width: =330
                X: =1455
                Y: =10
                ZIndex: =6

            drpGroupTeamGroups_1 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpGroupTeamGroups_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpGroupTeamGroups_1.ChevronFill, 20%)
                Default: =If(IsBlank(ThisItem.Value), First(ThisItem.AADGroups).displayName, LookUp(ThisItem.AADGroups, Text(id) = ThisItem.Value).displayName)
                Height: =46
                HoverBorderColor: =ColorFade(drpGroupTeamGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpGroupTeamGroups_1.Color, 20%)
                HoverFill: =ColorFade(drpGroupTeamGroups_1.SelectionFill, 20%)
                Items: =ThisItem.AADGroups
                OnChange: |-
                    =Patch(
                        GroupTeams,
                        ThisItem,
                        {Value: drpGroupTeamGroups_1.Selected.id}
                    );
                OnSelect: =
                PressedBorderColor: =drpGroupTeamGroups_1.HoverBorderColor
                PressedColor: =drpGroupTeamGroups_1.Fill
                PressedFill: =drpGroupTeamGroups_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =320
                X: =1082
                Y: =11
                ZIndex: =7

            txtFilterTeamGroupGroups_1 As text:
                Default: =""
                Height: =46
                HintText: ="Enter the name of the group to filter."
                HoverBorderColor: =ColorFade(txtFilterTeamGroupGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtFilterTeamGroupGroups_1.Color, 20%)
                HoverFill: =ColorFade(txtFilterTeamGroupGroups_1.Fill, 20%)
                PressedBorderColor: =txtFilterTeamGroupGroups_1.HoverBorderColor
                PressedColor: =txtFilterTeamGroupGroups_1.Color
                PressedFill: =txtFilterTeamGroupGroups_1.Fill
                Visible: =ThisItem.FilterVisible
                Width: =440
                X: =947
                Y: =11
                ZIndex: =8

            icoDeleteGroupTeam_1 As icon.Add:
                AccessibleLabel: ="Refresh"
                BorderColor: =ColorFade(icoDeleteGroupTeam_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledColor: =ColorFade(icoDeleteGroupTeam_1.Color, 50%)
                DisabledFill: =ColorFade(icoDeleteGroupTeam_1.Fill, -80%)
                Height: =45
                HoverBorderColor: =ColorFade(icoDeleteGroupTeam_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoDeleteGroupTeam_1.Color, 20%)
                HoverFill: =ColorFade(icoDeleteGroupTeam_1.Fill, 20%)
                Icon: =Icon.Cancel
                OnSelect: |
                    =Remove(
                        EnvironmentTeams,
                        LookUp(EnvironmentTeams, teamid = glrGroupTeams_1.Selected.Id)
                    );
                    Remove(
                        GroupTeams,
                        ThisItem
                    );
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =5
                PaddingTop: =8
                PressedBorderColor: =ColorFade(icoDeleteGroupTeam_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoDeleteGroupTeam_1.Color, -20%)
                PressedFill: =ColorFade(icoDeleteGroupTeam_1.Fill, -20%)
                Tooltip: ="Delete Group Team"
                Visible: =showGroupTeamsSettings
                Width: =45
                X: =1790
                Y: =12
                ZIndex: =9

            icoFilterTeamsGroups_1 As icon.FilterFlat:
                BorderColor: =ColorFade(icoFilterTeamsGroups_1.Fill, -20%)
                Color: =PrimaryColor2Value
                DisabledFill: =ColorFade(icoFilterTeamsGroups_1.Fill, -80%)
                Height: =35
                HoverBorderColor: =ColorFade(icoFilterTeamsGroups_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoFilterTeamsGroups_1.Color, 20%)
                HoverFill: =ColorFade(icoFilterTeamsGroups_1.Fill, 20%)
                Icon: =ThisItem.FilterIcon
                OnSelect: |
                    =UpdateContext({currentGroup: glrGroupTeams_1.Selected.drpGroupTeamGroups_1.Selected});
                    If(
                        glrGroupTeams_1.Selected.FilterVisible,
                        ClearCollect(
                            AADGroups,
                            SearchAADGroups.Run(
                                {
                                    text: glrGroupTeams_1.Selected.txtFilterTeamGroupGroups_1.Text,
                                    text_1: ""
                                }
                            ).value
                        );
                        UpdateContext(
                            {
                                lclFirstTeamAADGroup: First(
                                    Sort(
                                        AADGroups,
                                        displayName
                                    )
                                )
                            }
                        );
                        Collect(
                            AADGroups,
                            {
                                id: "",
                                displayName: ""
                            }
                        );
                        ClearCollect(
                            AADGroups,
                            Sort(
                                AADGroups,
                                displayName
                            )
                        );
                        If(
                            IsBlankOrError(lclFirstTeamAADGroup),
                            Patch(
                                GroupTeams,
                                glrGroupTeams_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    AADGroups: AADGroups,
                                    FilterVisible: false,
                                    Value: currentGroup.id
                                }
                            ),
                            Patch(
                                GroupTeams,
                                glrGroupTeams_1.Selected,
                                {
                                    FilterIcon: Icon.FilterFlatFilled,
                                    AADGroups: AADGroups,
                                    FilterVisible: false,
                                    Value: lclFirstTeamAADGroup.id
                                }
                            );
                            Reset(drpGroupTeamGroups_1);
                        ),
                        Patch(
                            GroupTeams,
                            glrGroupTeams_1.Selected,
                            {
                                FilterIcon: Search,
                                FilterVisible: true,
                                Value: currentGroup.id
                            }
                        );
                        
                    );
                PressedBorderColor: =ColorFade(icoFilterTeamsGroups_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoFilterTeamsGroups_1.Color, -20%)
                PressedFill: =ColorFade(icoFilterTeamsGroups_1.Fill, -20%)
                Tooltip: ="Filter this list"
                Visible: =showGroupTeamsSettings
                Width: =35
                X: =1410
                Y: =17
                ZIndex: =10

            drpGroupTeamBUs_1 As dropdown:
                AccessibleLabel: ="App Sharing Group"
                ChevronHoverBackground: =ColorFade(drpGroupTeamBUs_1.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpGroupTeamBUs_1.ChevronFill, 20%)
                Default: |-
                    =If(
                        IsBlank(ThisItem.BusinessUnitId),
                        First(ThisItem.EnvironmentBusinessUnits).name,
                        LookUp(
                            ThisItem.EnvironmentBusinessUnits,
                            Text(businessunitid) = ThisItem.BusinessUnitId
                        ).name
                    )
                Height: =46
                HoverBorderColor: =ColorFade(drpGroupTeamBUs_1.BorderColor, 20%)
                HoverColor: =ColorFade(drpGroupTeamBUs_1.Color, 20%)
                HoverFill: =ColorFade(drpGroupTeamBUs_1.SelectionFill, 20%)
                Items: =ThisItem.EnvironmentBusinessUnits
                OnChange: =
                OnSelect: =
                PressedBorderColor: =drpGroupTeamBUs_1.HoverBorderColor
                PressedColor: =drpGroupTeamBUs_1.Fill
                PressedFill: =drpGroupTeamBUs_1.Color
                Reset: =resetEnvironment
                Tooltip: ="Select an Existing AAD Group"
                Width: =300
                X: =772
                Y: =10
                ZIndex: =11

        lblDeployAppGroupSharing_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Sharing"
            Visible: =showSharingSettings && !IsEmpty(glrCanvasApps_1.AllItems)
            Width: =182
            X: =733
            Y: =253
            ZIndex: =25

        lblDeployAppPermission_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Permissions"
            Visible: =showSharingSettings && !IsEmpty(glrCanvasApps_1.AllItems)
            Width: =182
            X: =1628
            Y: =249
            ZIndex: =26

        btnSaveDeployment_1 As button:
            Height: =45
            HoverBorderColor: =ColorFade(btnSaveDeployment_1.BorderColor, 20%)
            HoverColor: =ColorFade(btnSaveDeployment_1.Color, 20%)
            HoverFill: =ColorFade(btnSaveDeployment_1.Fill, 20%)
            OnSelect: =
            PressedBorderColor: =btnSaveDeployment_1.Fill
            PressedColor: =btnSaveDeployment_1.Fill
            PressedFill: =btnSaveDeployment_1.Color
            Text: =SaveDeploymentButtonText
            Tooltip: ="Save the Current Environment's Deployment Configuration"
            Visible: =IsBlankOrError(ReturnScreen) Or !IsBlankOrError(SaveDeploymentButtonText)
            Width: =200
            X: =1674
            Y: =1003
            ZIndex: =27

        lblDeployConnectionReferences_1 As label:
            FontWeight: =If(showConnectionReferenceSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Connection References"
            Width: =210
            X: =28
            Y: =208
            ZIndex: =28

        icoRefreshConnections_1 As icon.Add:
            AccessibleLabel: ="Refresh"
            BorderColor: =ColorFade(icoRefreshConnections_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledColor: =ColorFade(icoRefreshConnections_1.Color, 50%)
            DisabledFill: =ColorFade(icoRefreshConnections_1.Fill, -80%)
            Height: =45
            HoverBorderColor: =ColorFade(icoRefreshConnections_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoRefreshConnections_1.Color, 20%)
            HoverFill: =ColorFade(icoRefreshConnections_1.Fill, 20%)
            Icon: =Icon.Reload
            OnSelect: |+
                =UpdateContext({locCloseAfterSave: false});
                Select(btnSaveDeployment_1);
                Select(fncLoadEnvironmentDeploymentSettings_1);
                
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoRefreshConnections_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoRefreshConnections_1.Color, -20%)
            PressedFill: =ColorFade(icoRefreshConnections_1.Fill, -20%)
            Tooltip: ="Click to Refresh"
            Visible: =showConnectionReferenceSettings
            Width: =45
            X: =1793
            Y: =206
            ZIndex: =29

        lblNoResults_1 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: |-
                =If(
                    glrCanvasApps_1.Visible,
                    "There are no canvas apps in this solution",
                    If(
                        glrConnectionReferences_1.Visible,
                        "There are no connnection references in this solution",
                        If(
                            glrEnvironmentVariables_1.Visible,
                            "There are no environment variables in this solution",
                            If(
                                glrCustomConnectors_1.Visible,
                                "There are no custom connectors in this solution",
                                If(
                                    glrFlows_1.Visible,
                                    "There are no flows in this solution",
                                    If(
                                        glrGroupTeams_1.Visible,
                                        "Select + to create a new dataverse team to sync with an Azure AD security group (optional). "
                                    )
                                )
                            )
                        )
                    )
                )
            Visible: =(IsEmpty(glrCanvasApps_1.AllItems) && glrCanvasApps_1.Visible) || (IsEmpty(glrConnectionReferences_1.AllItems) && glrConnectionReferences_1.Visible) || (IsEmpty(glrEnvironmentVariables_1.AllItems) && glrEnvironmentVariables_1.Visible) || (IsEmpty(glrCustomConnectors_1.AllItems) && glrCustomConnectors_1.Visible) || (IsEmpty(glrGroupTeams_1.AllItems) && glrGroupTeams_1.Visible) || (IsEmpty(glrFlows_1.AllItems) && glrFlows_1.Visible)
            Width: =600
            X: =653
            Y: =476
            ZIndex: =30

        lblDeployGroupTeamName_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Team Name"
            Visible: =showGroupTeamsSettings && !IsEmpty(glrGroupTeams_1.AllItems)
            Width: =182
            X: =484
            Y: =253
            ZIndex: =31

        lblDeployGroupTeamRoles_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Roles"
            Visible: =showGroupTeamsSettings && !IsEmpty(glrGroupTeams_1.AllItems)
            Width: =182
            X: =1481
            Y: =249
            ZIndex: =32

        lblDeployGroupTeamGroup_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="AAD Group"
            Visible: =showGroupTeamsSettings && !IsEmpty(glrGroupTeams_1.AllItems)
            Width: =182
            X: =1106
            Y: =251
            ZIndex: =33

        lblDeployConnectorTeamSharing_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Sharing"
            Visible: =showConnectorSettings && !IsEmpty(glrCustomConnectors_1.AllItems)
            Width: =182
            X: =1006
            Y: =251
            ZIndex: =34

        lblDeployFlowsActivateAll_1 As label:
            Align: =Align.Center
            FontWeight: =If(showGroupTeamsSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =37
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Install Order"
            Visible: =showOwnerSettings && !IsEmpty(glrFlows_1.AllItems)
            Width: =123
            X: =1750
            Y: =241
            ZIndex: =36

        icoAddNewGroupTeam_1 As icon.Add:
            AccessibleLabel: ="Refresh"
            BorderColor: =ColorFade(icoAddNewGroupTeam_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledColor: =ColorFade(icoAddNewGroupTeam_1.Color, 50%)
            DisabledFill: =ColorFade(icoAddNewGroupTeam_1.Fill, -80%)
            Height: =45
            HoverBorderColor: =ColorFade(icoAddNewGroupTeam_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoAddNewGroupTeam_1.Color, 20%)
            HoverFill: =ColorFade(icoAddNewGroupTeam_1.Fill, 20%)
            Icon: =Icon.Add
            OnSelect: |-
                =UpdateContext({NewGroupTeamId: Text(GUID())});
                Collect(GroupTeams, {Name: "ENTER A TEAM NAME", DisplayName: "ENTER A TEAM NAME", Value: "", Id: NewGroupTeamId, EnvironmentBusinessUnits: EnvironmentBusinessUnits, AADGroups: TeamAADGroups, DisplayMode: DisplayMode.Edit, FilterVisible:false, FilterIcon: Icon.FilterFlat });
                Collect(
                    EnvironmentTeams,
                    {
                        name: "ENTER A TEAM NAME",
                        teamid: NewGroupTeamId
                    }
                );
                ClearCollect(EnvironmentTeams, Sort(EnvironmentTeams, name));
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoAddNewGroupTeam_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoAddNewGroupTeam_1.Color, -20%)
            PressedFill: =ColorFade(icoAddNewGroupTeam_1.Fill, -20%)
            Tooltip: ="Add New Group Team"
            Visible: =showGroupTeamsSettings
            Width: =45
            X: =1822
            Y: =215
            ZIndex: =37

        chkUpgradeSolution_1 As checkbox:
            Default: =If(solutionupgradetag="true",true,false)
            FontWeight: =FontWeight.Semibold
            Height: =46
            HoverBorderColor: =ColorFade(chkUpgradeSolution_1.BorderColor, 20%)
            HoverColor: =ColorFade(chkUpgradeSolution_1.Color, 20%)
            HoverFill: =ColorFade(chkUpgradeSolution_1.Fill, 20%)
            PressedBorderColor: =ColorFade(chkUpgradeSolution_1.BorderColor, -20%)
            PressedColor: =ColorFade(chkUpgradeSolution_1.Color, -20%)
            PressedFill: =ColorFade(chkUpgradeSolution_1.Fill, -20%)
            Text: ="Upgrade Solution"
            Tooltip: ="If components have been removed that already exist in the target environment, select Upgrade Solution to ensure they are removed in the target environment."
            Visible: =!showSolutionComponentLoader
            Width: =219
            X: =1665
            Y: =135
            ZIndex: =38

        lblDeployGroupTeamBU_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =FontWeight.Semibold
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Business Unit"
            Visible: =showGroupTeamsSettings && !IsEmpty(glrGroupTeams_1.AllItems)
            Width: =182
            X: =796
            Y: =251
            ZIndex: =39

        icoDeployConnectionReferences_1 As icon.Add:
            AccessibleLabel: ="Connection References"
            BorderColor: =ColorFade(icoDeployConnectionReferences_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployConnectionReferences_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeployConnectionReferences_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployConnectionReferences_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployConnectionReferences_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: true,
                        showEnvironmentVariablesSettings: false,
                        showOwnerSettings: false,
                        showSharingSettings: false,
                        showConnectorSettings: false,
                        showGroupTeamsSettings: false
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeployConnectionReferences_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployConnectionReferences_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployConnectionReferences_1.Fill, -20%)
            Tooltip: ="Set Connection References for the Target Environment"
            Width: =200
            X: =24
            Y: =204
            ZIndex: =40

        icoDeployEnvironmentVariables_1 As icon.Add:
            AccessibleLabel: ="Environment Variables"
            BorderColor: =ColorFade(icoDeployEnvironmentVariables_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeployEnvironmentVariables_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeployEnvironmentVariables_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployEnvironmentVariables_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployEnvironmentVariables_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: false,
                        showEnvironmentVariablesSettings: true,
                        showOwnerSettings: false,
                        showSharingSettings: false,
                        showConnectorSettings: false,
                        showGroupTeamsSettings: false
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeployEnvironmentVariables_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployEnvironmentVariables_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployEnvironmentVariables_1.Fill, -20%)
            Tooltip: ="Set Environment Variable Values for the Target Environment"
            Width: =200
            X: =236
            Y: =204
            ZIndex: =41

        icoDeploySharing_1 As icon.Add:
            AccessibleLabel: ="Sharing"
            BorderColor: =ColorFade(icoDeploySharing_1.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoDeploySharing_1.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoDeploySharing_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeploySharing_1.Color, 20%)
            HoverFill: =ColorFade(icoDeploySharing_1.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showConnectionReferenceSettings: false,
                        showEnvironmentVariablesSettings: false,
                        showOwnerSettings: false,
                        showSharingSettings: true,
                        showConnectorSettings: false,
                        showGroupTeamsSettings: false
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoDeploySharing_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeploySharing_1.Color, -20%)
            PressedFill: =ColorFade(icoDeploySharing_1.Fill, -20%)
            Tooltip: ="Set Sharing Configuration for the Target Environment"
            Width: =120
            X: =439
            Y: =204
            ZIndex: =42

        lblDeploymentSettingsNote_1 As label:
            Align: =Align.Center
            Color: =RGBA(0, 0, 0, 1)
            FontWeight: =FontWeight.Semibold
            Height: =45
            HoverColor: =OrangeRed
            PaddingLeft: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                ="NOTE: Changes made to the deployment settings requires you to run " & promoteSolutionLabel & " again to update the deployment."
            VerticalAlign: =VerticalAlign.Bottom
            Width: =1010
            X: =461
            Y: =1003
            ZIndex: =43

        loaderSolutionComponents_1 As Preloader:
            Height: =876
            IsLoading: =showSolutionComponentLoader
            SpinnerColorHex: =LookUp(loaderSolutionComponents_1.Styles, Name = "PrimaryColor2Value").Value
            Styles: =ComponentStyles
            Text: =SolutionLoaderText
            Visible: =loaderSolutionComponents_1.IsLoading
            Width: =1920
            Y: =204
            ZIndex: =44

        loaderDeploymentEnvironment_1 As Preloader:
            Height: =1016
            IsLoading: =showDeploymentSettingsLoader
            SpinnerColorHex: =LookUp(loaderDeploymentEnvironment_1.Styles, Name = "PrimaryColor2Value").Value
            Styles: =ComponentStyles
            Text: =DeploymentSettingsLoadingText
            Visible: =loaderDeploymentEnvironment_1.IsLoading
            Width: =1920
            Y: =64
            ZIndex: =45

        lblDeployCustomConnectors_2 As label:
            FontWeight: =If(showOwnerSettings, FontWeight.Bold, FontWeight.Semibold)
            Height: =45
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Solution Dependencies"
            Width: =210
            X: =932
            Y: =208
            ZIndex: =46

        lblDeployFlowOwner_2 As label:
            FontWeight: =FontWeight.Semibold
            Height: =37
            OnSelect: =
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Solution Source"
            Tooltip: ="Updates the owner of the flow in the target environment."
            Visible: =showOwnerSettings && !IsEmpty(glrFlows_1.AllItems)
            Width: =182
            X: =1354
            Y: =253
            ZIndex: =47

    btnFunctionsDeploy_1 As groupContainer:
        Height: =320
        Visible: =false
        Width: =564
        X: =1
        Y: =760
        ZIndex: =2

        fncLoadEnvironmentDeploymentSettings_1 As button:
            Height: =28
            HoverBorderColor: =ColorFade(fncLoadEnvironmentDeploymentSettings_1.BorderColor, 20%)
            HoverColor: =ColorFade(fncLoadEnvironmentDeploymentSettings_1.Color, 20%)
            HoverFill: =ColorFade(fncLoadEnvironmentDeploymentSettings_1.Fill, 20%)
            OnSelect: |-
                =IfError(
                    UpdateContext(
                        {
                            showSolutionComponentLoader: true,
                            DeploymentSettingsLoadingText: "LOADING DEPLOYMENT ENVIRONMENT CONFIGURATION...",
                            solutionupgradetag: "false"
                        }
                    );
                    If(
                        IsBlank(drpDeployEnvironments_1.Selected),
                        UpdateContext({SelectedDeploymentEnvironment: First(DeploymentEnvironments)}),
                        UpdateContext({SelectedDeploymentEnvironment: drpDeployEnvironments_1.Selected})
                    );
                    If(
                        Not IsBlank(SelectedDeploymentEnvironment),
                        UpdateContext({locSolutionEnvironmentDeploySettingName: DeploymentSettingName & " - " & SelectedSolutionToConfigure.uniquename & " - " & SelectedDeploymentEnvironment.EnvironmentUrl});
                        UpdateContext(
                            {
                                locEnvironmentDeploymentSetting: LookUp(
                                    'User Settings',
                                    Name = locSolutionEnvironmentDeploySettingName
                                )
                            }
                        );
                        If(
                            IsBlank(locEnvironmentDeploymentSetting.Data),
                            UpdateContext({EnvironmentDeploymentSettings: ParseDeploymentSettings.Run("[]")}),
                            UpdateContext({EnvironmentDeploymentSettings: ParseDeploymentSettings.Run(locEnvironmentDeploymentSetting.Data)})
                        );
                        UpdateContext(
                            {
                                locSharepointFilter: Concat(
                                    Distinct(
                                        Filter(
                                            EnvironmentDeploymentSettings,
                                            StartsWith(
                                                Name,
                                                "environmentvariable."
                                            ) And !IsBlankOrError(Value) And !IsBlank(
                                                Find(
                                                    "sharepoint",
                                                    Value
                                                )
                                            )
                                        ),
                                        Value
                                    ),
                                    "site:" & Result,
                                    " OR "
                                )
                            }
                        );
                        UpdateContext(
                            {
                                solutionupgradetag: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "TriggerSolutionUpgrade"
                                ).Value
                            }
                        );
                        Concurrent(
                            ClearCollect(
                                EnvironmentTeams,
                                SearchDeploymentEnvironmentTeams.Run(
                                    Last(
                                        FirstN(
                                            Split(
                                                SelectedDeploymentEnvironment.EnvironmentUrl,
                                                "."
                                            ),
                                            2
                                        )
                                    ).Result,
                                    LookUp(
                                        AllEnvironments,
                                        SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                                    ).properties.linkedEnvironmentMetadata.uniqueName,
                                    {
                                        text_3: "",
                                        text_4: ""
                                    }
                                )
                            ),
                            ClearCollect(
                                EnvironmentBusinessUnits,
                                SearchDeploymentEnvironmentBUnits.Run(
                                    Last(
                                        FirstN(
                                            Split(
                                                SelectedDeploymentEnvironment.EnvironmentUrl,
                                                "."
                                            ),
                                            2
                                        )
                                    ).Result,
                                    LookUp(
                                        AllEnvironments,
                                        SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                                    ).properties.linkedEnvironmentMetadata.uniqueName
                                )
                            ),
                            ClearCollect(
                                EnvironmentCustomConnectors,
                                SearchDeploymentEnvironmentConnectors.Run(
                                    Last(
                                        FirstN(
                                            Split(
                                                SelectedDeploymentEnvironment.EnvironmentUrl,
                                                "."
                                            ),
                                            2
                                        )
                                    ).Result,
                                    LookUp(
                                        AllEnvironments,
                                        SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                                    ).properties.linkedEnvironmentMetadata.uniqueName,
                                    {text_3: ""}
                                )
                            ),
                            //ClearCollect(
                            //    EnvironmentUsers,
                            //    SearchDeploymentEnvironmentUsers.Run(
                            //        Last(
                            //            FirstN(
                            //                Split(
                            //                    SelectedDeploymentEnvironment.EnvironmentUrl,
                            //                    "."
                            //                ),
                            //                2
                            //            )
                            //        ).Result,
                            //        LookUp(
                            //            AllEnvironments,
                            //            SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl
                            //       ).properties.linkedEnvironmentMetadata.uniqueName,
                            //        {
                            //            text_3: "",
                            //            text_4: ""
                            //        }
                            //    )
                            //),
                            ClearCollect(
                                SharepointSites,
                                SearchSharepointSites.Run(
                                    {
                                        text: "",
                                        text_1: locSharepointFilter
                                    }
                                ).value
                            )
                        )
                    );
                    ClearCollect(
                        GroupTeams,
                        AddColumns(
                            Filter(
                                EnvironmentDeploymentSettings,
                                StartsWith(
                                    Name,
                                    "groupteam"
                                )
                            ),
                            "DisplayName",
                            LookUp(
                                EnvironmentDeploymentSettings As eds,
                                eds.Name = "teamname." & Last(
                                    FirstN(
                                        Split(
                                            Name,
                                            "."
                                        ),
                                        2
                                    )
                                ).Result
                            ).Value,
                            "Id",
                            Last(
                                FirstN(
                                    Split(
                                        Name,
                                        "."
                                    ),
                                    2
                                )
                            ).Result,
                            "BusinessUnitId",
                            If(
                                !IsBlankOrError(
                                    LookUp(
                                        EnvironmentDeploymentSettings As eds,
                                        eds.Name = Substitute(
                                            Name,
                                            "groupTeam",
                                            "businessUnit"
                                        )
                                    ).Value
                                ),
                                LookUp(
                                    EnvironmentDeploymentSettings As eds,
                                    eds.Name = Substitute(
                                        Name,
                                        "groupTeam",
                                        "businessUnit"
                                    )
                                ).Value
                            ),
                            "AADGroups",
                            TeamAADGroups,
                            "EnvironmentBusinessUnits",
                            EnvironmentBusinessUnits,
                            "FilterVisible",
                            false,
                            "FilterIcon",
                            Icon.FilterFlat,
                            "SelectedRoles",
                            Data
                        )
                    );
                    // Add an empty row & Sort SharePoint sites
                Collect(
                        SharepointSites,
                        {webUrl: ""}
                    );
                    ClearCollect(
                        SharepointSites,
                        Sort(
                            SharepointSites,
                            webUrl
                        )
                    );
                    ClearCollect(
                        SharepointSitesSorted,// Used to update collection SolutionEnvironmentVariables
                        SharepointSites
                    );
                    Clear(GroupTeamSelectedRoles);
                    ForAll(
                        GroupTeams As gt,
                        If(
                            IsBlankOrError(
                                LookUp(
                                    EnvironmentTeams,
                                    name = gt.Name
                                )
                            ),
                            Collect(
                                EnvironmentTeams,
                                {
                                    name: gt.DisplayName,
                                    teamid: gt.Id
                                }
                            );
                        );
                        ForAll(
                            Split(
                                gt.SelectedRoles,
                                ","
                            ),
                            Collect(
                                GroupTeamSelectedRoles,
                                AddColumns(
                                    Filter(
                                        SolutionSecurityRoles,
                                        name = Result
                                    ),
                                    "GroupTeamId",
                                    gt.Id
                                )
                            )
                        );
                    );
                    
                //Add an empty row to EnvironmentTeams
                Collect(
                        EnvironmentTeams,
                        {name: ""}
                    );
                    ClearCollect(
                        EnvironmentTeams,
                        Sort(
                            EnvironmentTeams,
                            name,
                            Ascending
                        )
                    );
                    
                //Add an empty row to EnvironmentUsers
                Collect(
                        EnvironmentUsers,
                        {internalemailaddress: ""}
                    );
                    ClearCollect(
                        EnvironmentUsers,
                        Sort(
                            EnvironmentUsers,
                            internalemailaddress,
                            Ascending
                        )
                    );
                    Concurrent(
                        UpdateIf(
                            SolutionConnectionReferences,
                            true,
                            {
                                CurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "connectionreference." & connectionreferencelogicalname
                                ).Value
                            }
                        ),
                        UpdateIf(
                            SolutionEnvironmentVariables,
                            true,
                            {
                                CurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "environmentvariable." & schemaname
                                ).Value,
                                SharepointSites: SharepointSitesSorted
                            }
                        ),
                        UpdateIf(
                            SolutionCanvasApps,
                            true,
                            {
                                CurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "canvasshare.aadGroupId." & name
                                ).Value,
                                CurrentPermission: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "canvasshare.roleName." & name
                                ).Value
                            }
                        ),
                        UpdateIf(
                            SolutionFlows,
                            true,
                            {
                                CurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "owner.ownerEmail." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                //EnvironmentUsers: EnvironmentUsers,
                                ActivationCurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.activateas." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                //ActivationEnvironmentUsers: EnvironmentUsers,
                                SharingCurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "flow.sharing." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                SortOrder: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.order." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value,
                                Activate: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "activateflow.activate." & Substitute(
                                        name,
                                        " ",
                                        ""
                                    ) & "." & workflowid
                                ).Value
                            }
                        ),
                        UpdateIf(
                            CustomConnectors,
                            true,
                            {
                                CurrentValue: LookUp(
                                    EnvironmentDeploymentSettings,
                                    Name = "connector.teamname." & Substitute(
                                        displayname,
                                        " ",
                                        ""
                                    ) & "." & connectorid
                                ).Value
                            }
                        ),
                        ClearCollect(
                            EnvironmentConnections,
                            AddColumns(
                                PowerAppsforMakers.GetConnections(
                                    {
                                        '$filter': "environment eq '" & LookUp(
                                            AllEnvironments,
                                            SelectedDeploymentEnvironment.EnvironmentUrl in properties.linkedEnvironmentMetadata.instanceUrl,
                                            name
                                        ) & "'",
                                        'api-version': "2016-11-01",
                                        '$top': 500
                                    }
                                ).value,
                                "DisplayName",
                                properties.displayName,
                                "ConnectionId",
                                name,
                                "ApiId",
                                properties.apiId,
                                "IconUrl",
                                properties.iconUri,
                                "Status",
                                First(properties.statuses).status
                            )
                        )
                    );
                    ClearCollect(
                        lclSolutionFlowsTemp,
                        SolutionFlows
                    );
                    ForAll(
                        lclSolutionFlowsTemp As sf,
                        If(
                            IsBlankOrError(sf.SortOrder),
                            Patch(
                                SolutionFlows,
                                LookUp(
                                    SolutionFlows,
                                    sf.workflowid = workflowid
                                ),
                                {
                                    SortOrder: CountIf(
                                        SolutionFlows,
                                        !IsBlankOrError(SortOrder)
                                    ) + 1
                                }
                            )
                        )
                    );
                    
                //Add any connections that the current user doesn't have permissions to access
                ClearCollect(
                        locUnsharedConnections,
                        Filter(
                            SolutionConnectionReferences,
                            !IsBlankOrError(CurrentValue) And !(CurrentValue in EnvironmentConnections.ConnectionId)
                        )
                    );
                    If(
                        CountRows(locUnsharedConnections) > 0,
                        UpdateContext(
                            {
                                locConnectorSearchCriteria: Concat(
                                    Distinct(
                                        locUnsharedConnections,
                                        connectorid
                                    ),
                                    "id eq '" & Result & "' or "
                                )
                            }
                        );
                        UpdateContext(
                            {
                                locConnectorSearchCriteria: Left(
                                    locConnectorSearchCriteria,
                                    Len(locConnectorSearchCriteria) - 3
                                )
                            }
                        );
                        ClearCollect(
                            locConnectors,
                            PowerAppsforMakers.GetConnectors({'$filter': "environment eq '" & SelectedEnvironment.name & "' and " & locConnectorSearchCriteria}).value
                        );
                        ForAll(
                            locUnsharedConnections,
                            If(
                                IsEmpty(
                                    Filter(
                                        EnvironmentConnections,
                                        ConnectionId = CurrentValue
                                    )
                                ),
                                Collect(
                                    EnvironmentConnections,
                                    {
                                        ApiId: connectorid,
                                        ConnectionId: CurrentValue,
                                        DisplayName: "Existing Unshared Connection",
                                        Status: "Unknown",
                                        IconUrl: First(
                                            Filter(
                                                locConnectors,
                                                id = connectorid
                                            )
                                        ).properties.iconUri
                                    }
                                )
                            )
                        )
                    );
                    Clear(SharepointLists);
                    ForAll(
                        Filter(
                            SolutionEnvironmentVariables,
                            type = 100000004 And parameterkey = "dataset"
                        ),
                        If(
                            Not IsBlank(CurrentValue) And Not IsBlank(
                                First(
                                    Filter(
                                        SharepointSites,
                                        webUrl = CurrentValue
                                    )
                                ).id
                            ),
                            Collect(
                                SharepointLists,
                                AddColumns(
                                    SearchSharepointLists.Run(
                                        LookUp(
                                            SharepointSites,
                                            webUrl = CurrentValue
                                        ).id
                                    ).value,
                                    "DefinitionId",
                                    environmentvariabledefinitionid
                                )
                            )
                        )
                    );
                    UpdateContext({resetEnvironment: false});
                    UpdateContext({resetEnvironment: true});
                    UpdateContext(
                        {
                            showDeploymentSettingsLoader: false,
                            showSolutionComponentLoader: false
                        }
                    );
                    ,
                    UpdateContext({errorMessage: FirstError.Message});
                    Notify("Error running pipeline: " & errorMessage);
                    
                )
            PressedBorderColor: =fncLoadEnvironmentDeploymentSettings_1.Fill
            PressedColor: =fncLoadEnvironmentDeploymentSettings_1.Fill
            PressedFill: =fncLoadEnvironmentDeploymentSettings_1.Color
            Text: ="fncInitializeHome"
            Width: =560
            X: =4
            Y: =77
            ZIndex: =9

    DeploymentDialogOverlay_1 As rectangle:
        BorderColor: =ColorFade(DeploymentDialogOverlay_1.Fill, -20%)
        DisabledFill: =DeploymentDialogOverlay_1.Fill
        Fill: =RGBA(0, 0, 0, .5)
        Height: =1080
        HoverFill: =RGBA(0, 0, 0, .5)
        PressedFill: =ColorFade(DeploymentDialogOverlay_1.Fill, -20%)
        Visible: =showDeploymentDialogOverlay
        Width: =1920
        ZIndex: =3

    ConnectionRequestDialog_1 As groupContainer:
        Height: =1080
        Visible: =showConnectionRequestDialog
        Width: =550
        X: =1370
        ZIndex: =4

        rctConnectionRequestDialog_1 As rectangle:
            BorderColor: =ColorFade(rctConnectionRequestDialog_1.Fill, -20%)
            DisabledFill: =rctConnectionRequestDialog_1.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(rctConnectionRequestDialog_1.Fill, 20%)
            PressedFill: =ColorFade(rctConnectionRequestDialog_1.Fill, -20%)
            Width: =550
            ZIndex: =1

        lblConnectionRequestDialogTitle_1 As label:
            Align: =Center
            FontWeight: =Semibold
            Height: =64
            Size: =16
            Text: ="CONNECTION REQUEST"
            Width: =546
            ZIndex: =2

        icoConnectionRequestDialogClose_1 As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoConnectionRequestDialogClose_1.Fill, -20%)
            DisabledFill: =ColorFade(icoConnectionRequestDialogClose_1.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoConnectionRequestDialogClose_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoConnectionRequestDialogClose_1.Color, 20%)
            HoverFill: =ColorFade(icoConnectionRequestDialogClose_1.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDeploymentDialogOverlay:false,showConnectionRequestDialog:false});
                Clear(MyPeople);
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoConnectionRequestDialogClose_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoConnectionRequestDialogClose_1.Color, -20%)
            PressedFill: =ColorFade(icoConnectionRequestDialogClose_1.Fill, -20%)
            Width: =55
            X: =495
            Y: =4
            ZIndex: =3

        btnSendRequest_1 As button:
            DisplayMode: |-
                =If(
                    CountRows(glrInvitedUsers_1.AllItems) = 0,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Height: =45
            HoverBorderColor: =ColorFade(btnSendRequest_1.BorderColor, 20%)
            HoverColor: =ColorFade(btnSendRequest_1.Color, 20%)
            HoverFill: =ColorFade(btnSendRequest_1.Fill, 20%)
            OnSelect: |
                =UpdateContext(
                    {
                        showDeploymentDialogOverlay: false,
                        showConnectionRequestDialog: false
                    }
                );
                Launch(
                    "mailto:" & Concat(
                        glrInvitedUsers_1.AllItems,
                        Mail & ";"
                    ) & "?subject=" & gblUser.FullName & " is requesting your help to re-establish a Power Apps Solution Connection" & "&body=" & "Hello,%0D%0A%0D%0ACan you assist with re-establishing the following connection in " & drpDeployEnvironments_1.Selected.Name & "%0D%0A%0D%0APlease use the following link to login and re-establish the connection https://web.powerapps.com/apps/" & First(
                        Filter(
                            PowerAppsforMakers.GetApps().value,
                            properties.displayName = AppName && properties.environment.name = ExecutingEnvironment.tags.environmentName
                        )
                    ).name & "?profile=" & SelectedConfigurationDeploymentProfile.'Deployment Profile' & "%26step=" & SelectedDeploymentStep.'Deployment Step' & "%26env=" & SelectedEnvironment.name & "%26configsoln=" & Text(SelectedSolutionToConfigure.solutionid)
                );
                Clear(MyPeople);
            PressedBorderColor: =btnSendRequest_1.Fill
            PressedColor: =btnSendRequest_1.Fill
            PressedFill: =btnSendRequest_1.Color
            Text: ="SEND"
            Width: =200
            X: =330
            Y: =1015
            ZIndex: =8

        lblPullRequestSolutionFriendlyName_2 As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =28
            OnSelect: =glrConnectionReferences_1.Selected.connectionreferencedisplayname
            Size: =16
            Text: =glrConnectionReferences_1.Selected.connectionreferencedisplayname
            Width: =550
            Y: =58
            ZIndex: =14

        lblConnectionRequestInstructions_1 As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =62
            PaddingLeft: =0
            Text: ="Use the search below to invite another user to create and / or refresh connections in the target environment."
            Width: =513
            X: =28
            Y: =97
            ZIndex: =15

        LblAppName1_1 As label:
            Height: =64
            Text: ="People"
            Width: =Parent.Width - Self.X * 2
            Wrap: =false
            X: =32
            ZIndex: =16

        txtConnectionRequestSearch_1 As text:
            AccessibleLabel: ="Search"
            Align: =Left
            Default: =""
            Height: =48
            HintText: ="Enter a name or email address"
            HoverBorderColor: =ColorFade(txtConnectionRequestSearch_1.BorderColor, 20%)
            HoverColor: =ColorFade(txtConnectionRequestSearch_1.Color, 20%)
            HoverFill: =ColorFade(txtConnectionRequestSearch_1.Fill, 20%)
            PaddingLeft: =70
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =550
            Y: =187
            ZIndex: =17

        SearchIcon1_1 As icon.Search:
            BorderColor: =ColorFade(SearchIcon1_1.Fill, -20%)
            DisabledFill: =ColorFade(SearchIcon1_1.Fill, -80%)
            Height: =38
            HoverBorderColor: =ColorFade(SearchIcon1_1.BorderColor, 20%)
            HoverColor: =ColorFade(SearchIcon1_1.Color, 20%)
            HoverFill: =ColorFade(SearchIcon1_1.Fill, 20%)
            Icon: =Icon.Search
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =8
            PressedBorderColor: =ColorFade(SearchIcon1_1.BorderColor, -20%)
            PressedColor: =ColorFade(SearchIcon1_1.Color, -20%)
            PressedFill: =ColorFade(SearchIcon1_1.Fill, -20%)
            Tooltip: ="Search"
            Width: =43
            X: =24
            Y: =190
            ZIndex: =18

        glrConnectionRequestBrowseUsers_1 As gallery.PeoplePickerTabletGallery:
            AccessibleLabel: ="User look up search results"
            BorderColor: =PrimaryColor3Value
            Fill: =Parent.Fill
            Height: =364
            Items: |-
                =If(!IsBlank(Trim(txtConnectionRequestSearch_1.Text)), Office365Users.SearchUser({searchTerm: Trim(txtConnectionRequestSearch_1.Text), top: 15}))
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =87
            Width: =550
            Y: =228
            ZIndex: =23

            iconUser1_2 As icon.Person:
                AccessibleLabel: ="User"
                BorderColor: =ColorFade(iconUser1_2.Color, -20%)
                Color: =PrimaryColor1Value
                Fill: =PrimaryColor1Value
                Height: =connectionRequestUserImage_2.Height
                Icon: =Icon.Person
                OnSelect: =Select(connectionRequestUserName_1)
                PaddingBottom: =12
                PaddingLeft: =12
                PaddingRight: =12
                PaddingTop: =12
                PressedFill: =ColorFade(iconUser1_2.Color, -20%)
                Width: =connectionRequestUserImage_2.Width
                X: =connectionRequestUserImage_2.X
                Y: =connectionRequestUserImage_2.Y
                ZIndex: =2

            connectionRequestUserImage_2 As image:
                AccessibleLabel: ="User"
                BorderColor: =ColorFade(connectionRequestUserImage_2.Fill, -20%)
                FocusedBorderThickness: =2
                Height: =Self.Width
                HoverBorderColor: =ColorFade(connectionRequestUserImage_2.BorderColor, 20%)
                HoverFill: =ColorFade(connectionRequestUserImage_2.Fill, 20%)
                Image: =If(!IsBlank(ThisItem.Id), Office365Users.UserPhotoV2(ThisItem.Id))
                OnSelect: =Select(connectionRequestUserName_1)
                PressedBorderColor: =ColorFade(connectionRequestUserImage_2.BorderColor, -20%)
                PressedFill: =ColorFade(connectionRequestUserImage_2.Fill, -20%)
                Width: =glrConnectionRequestBrowseUsers_1.TemplateHeight - 10
                X: =28
                Y: =10
                ZIndex: =3

            connectionRequestUserName_1 As label:
                BorderColor: =Self.Color
                FocusedBorderThickness: =2
                FontWeight: =FontWeight.Semibold
                Height: =Self.Size * 1.8
                OnSelect: |-
                    =/*Select user, clear search contents and if this user hasn't been added to MyPeople collection, add them*/
                    Concurrent(
                        Reset(txtConnectionRequestSearch_1),
                        If(
                            Not(ThisItem.UserPrincipalName in MyPeople.UserPrincipalName),
                            Collect(
                                MyPeople,
                                ThisItem
                            )
                        )
                    )
                Size: =12
                TabIndex: =0
                Text: =ThisItem.DisplayName
                VerticalAlign: =Middle
                Width: =glrConnectionRequestBrowseUsers_1.TemplateWidth - 232
                Wrap: =false
                X: =connectionRequestUserImage_2.X + connectionRequestUserImage_2.Width + 16
                Y: =16
                ZIndex: =4

            connectionRequestUserEmail_1 As label:
                FocusedBorderThickness: =2
                Height: =Self.Size * 1.8
                OnSelect: =Select(connectionRequestUserName_1)
                Size: =12
                Text: =ThisItem.Mail
                VerticalAlign: =Middle
                Width: =connectionRequestUserName_1.Width
                Wrap: =false
                X: =connectionRequestUserName_1.X
                Y: =glrConnectionRequestBrowseUsers_1.TemplateHeight - Self.Height - 20
                ZIndex: =5

            Separator5_2 As rectangle:
                BorderColor: =ColorFade(Separator5_2.Fill, -20%)
                DisabledFill: =Separator5_2.Fill
                Height: =1
                HoverFill: =ColorFade(Separator5_2.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator5_2.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =6

            icoSelectUser_1 As icon.Cancel:
                AccessibleLabel: ="Select User"
                BorderColor: =ColorFade(icoSelectUser_1.Fill, -20%)
                DisabledFill: =ColorFade(icoSelectUser_1.Fill, -80%)
                Height: =77
                HoverBorderColor: =ColorFade(icoSelectUser_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoSelectUser_1.Color, 20%)
                HoverFill: =ColorFade(icoSelectUser_1.Fill, 20%)
                Icon: =
                OnSelect: =Select(connectionRequestUserName_1)
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(icoSelectUser_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoSelectUser_1.Color, -20%)
                PressedFill: =ColorFade(icoSelectUser_1.Fill, -20%)
                Width: =549
                X: =1
                Y: =10
                ZIndex: =7

        glrInvitedUsers_1 As gallery.PeoplePickerTabletGallery:
            AccessibleLabel: ="User look up search results"
            BorderColor: =PrimaryColor3Value
            Fill: =Parent.Fill
            Height: =314
            Items: =MyPeople
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =87
            Width: =550
            Y: =662
            ZIndex: =24

            Rectangle2_2 As rectangle:
                BorderColor: =PrimaryColor2Value
                DisabledFill: =Rectangle2_2.Fill
                Fill: =RGBA(0,0,0,0)
                FocusedBorderThickness: =2
                Height: =Parent.TemplateHeight - 2*Self.Y
                HoverFill: =RGBA(0,0,0,0)
                OnSelect: =Select(connectionInvitedUserName_1)
                PressedFill: =ColorFade(Rectangle2_2.Fill, -20%)
                Width: =Parent.TemplateWidth - 2*Self.X
                X: =1
                Y: =1
                ZIndex: =1

            iconUser1_3 As icon.Person:
                AccessibleLabel: ="User"
                BorderColor: =ColorFade(iconUser1_3.Color, -20%)
                Color: =PrimaryColor1Value
                Fill: =PrimaryColor1Value
                Height: =connectionRequestUserImage_3.Height
                Icon: =Icon.Person
                OnSelect: =Select(connectionInvitedUserName_1)
                PaddingBottom: =12
                PaddingLeft: =12
                PaddingRight: =12
                PaddingTop: =12
                PressedFill: =ColorFade(iconUser1_3.Color, -20%)
                Width: =connectionRequestUserImage_3.Width
                X: =connectionRequestUserImage_3.X
                Y: =connectionRequestUserImage_3.Y
                ZIndex: =2

            connectionRequestUserImage_3 As image:
                BorderColor: =ColorFade(connectionRequestUserImage_3.Fill, -20%)
                FocusedBorderThickness: =2
                Height: =Self.Width
                HoverBorderColor: =ColorFade(connectionRequestUserImage_3.BorderColor, 20%)
                HoverFill: =ColorFade(connectionRequestUserImage_3.Fill, 20%)
                Image: =If(!IsBlank(ThisItem.Id), Office365Users.UserPhotoV2(ThisItem.Id))
                OnSelect: =
                PressedBorderColor: =ColorFade(connectionRequestUserImage_3.BorderColor, -20%)
                PressedFill: =ColorFade(connectionRequestUserImage_3.Fill, -20%)
                Width: =glrInvitedUsers_1.TemplateHeight - 10
                X: =28
                Y: =(glrInvitedUsers_1.TemplateHeight / 2) - (Self.Height/2)
                ZIndex: =3

            connectionInvitedUserName_1 As label:
                BorderColor: =Self.Color
                FocusedBorderThickness: =2
                FontWeight: =FontWeight.Semibold
                Height: =Self.Size * 1.8
                OnSelect: |-
                    =/*Select user, clear search contents and if this user hasn't been added to MyPeople collection, add them*/
                    Concurrent(
                    Reset(txtConnectionRequestSearch_1),
                    If(Not(ThisItem.UserPrincipalName in MyPeople.UserPrincipalName), Collect(MyPeople, ThisItem)))
                Size: =12
                TabIndex: =0
                Text: =ThisItem.DisplayName
                VerticalAlign: =Middle
                Width: =glrInvitedUsers_1.TemplateWidth - 232
                Wrap: =false
                X: =connectionRequestUserImage_3.X + connectionRequestUserImage_3.Width + 16
                Y: =16
                ZIndex: =4

            connectionInvitedUserEmail_1 As label:
                FocusedBorderThickness: =2
                Height: =Self.Size * 1.8
                OnSelect: =Select(connectionInvitedUserName_1)
                Size: =12
                Text: =ThisItem.Mail
                VerticalAlign: =Middle
                Width: =connectionInvitedUserName_1.Width
                Wrap: =false
                X: =connectionInvitedUserName_1.X
                Y: =glrInvitedUsers_1.TemplateHeight - Self.Height - 20
                ZIndex: =5

            Separator5_3 As rectangle:
                BorderColor: =ColorFade(Separator5_3.Fill, -20%)
                DisabledFill: =Separator5_3.Fill
                Height: =1
                HoverFill: =ColorFade(Separator5_3.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator5_3.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =6

            icoConnectionRequestRemoveUser_1 As icon.Cancel:
                AccessibleLabel: ="Remove User"
                BorderColor: =ColorFade(icoConnectionRequestRemoveUser_1.Fill, -20%)
                DisabledFill: =ColorFade(icoConnectionRequestRemoveUser_1.Fill, -80%)
                Height: =55
                HoverBorderColor: =ColorFade(icoConnectionRequestRemoveUser_1.BorderColor, 20%)
                HoverColor: =ColorFade(icoConnectionRequestRemoveUser_1.Color, 20%)
                HoverFill: =ColorFade(icoConnectionRequestRemoveUser_1.Fill, 20%)
                Icon: =Icon.Cancel
                OnSelect: =Remove(MyPeople, LookUp(MyPeople, UserPrincipalName = ThisItem.UserPrincipalName))
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(icoConnectionRequestRemoveUser_1.BorderColor, -20%)
                PressedColor: =ColorFade(icoConnectionRequestRemoveUser_1.Color, -20%)
                PressedFill: =ColorFade(icoConnectionRequestRemoveUser_1.Fill, -20%)
                Width: =55
                X: =483
                Y: =17
                ZIndex: =7

        lblInvitedUserTitle_1 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =28
            Size: =16
            Text: ="Invited Users"
            Width: =550
            Y: =622
            ZIndex: =25

        RectSeparator2_3 As rectangle:
            BorderColor: =ColorFade(RectSeparator2_3.Fill, -20%)
            DisabledFill: =RectSeparator2_3.Fill
            Height: =1
            HoverFill: =ColorFade(RectSeparator2_3.Fill, 20%)
            PressedFill: =ColorFade(RectSeparator2_3.Fill, -20%)
            Width: =Parent.Width
            Y: =235
            ZIndex: =26

        RectSeparator2_4 As rectangle:
            BorderColor: =ColorFade(RectSeparator2_4.Fill, -20%)
            DisabledFill: =RectSeparator2_4.Fill
            Height: =1
            HoverFill: =ColorFade(RectSeparator2_4.Fill, 20%)
            PressedFill: =ColorFade(RectSeparator2_4.Fill, -20%)
            Width: =Parent.Width
            Y: =655
            ZIndex: =27

        lblNoUsersSelected_1 As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =62
            PaddingLeft: =0
            Text: ="No users have been invited. Search for a user to add them to the invitation."
            Visible: =CountRows(glrInvitedUsers_1.AllItems) = 0
            Width: =513
            X: =18
            Y: =674
            ZIndex: =28

